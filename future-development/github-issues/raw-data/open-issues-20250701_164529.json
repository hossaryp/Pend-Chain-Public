[{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nAllow admins to browse, search, and audit all platform notifications sent to users, supporting full regulatory traceability.\n\nUser Story:\nAs an admin, I want to view a complete log of notifications sent through the platform so I can verify that critical messages were delivered and properly recorded.\n\nAcceptance Criteria:\n\nLog View Table:\n\nColumns:\n\nTitle\n\nMessage Preview (first 100 characters)\n\nRecipient(s): Single user ID or “All Users”\n\nSent Timestamp\n\nSent By: Admin Name / ID\n\nFilters:\n\nBy Date Range\n\nBy User ID\n\nBy Admin ID\n\nBy Title Keyword\n\nAdditional Features:\n\nClick row → opens full message modal\n\nMessages are read-only for auditing purposes\n\nEach row shows delivery status (Success, Failed, Pending) \n\nDependencies:\n\nNotification system and backend message logger \n\nAdmin login and permissions \n\n","createdAt":"2025-07-01T11:02:27Z","labels":[],"milestone":null,"number":51,"state":"OPEN","title":"Feature:  Display Sent Notification Logs admin panel","updatedAt":"2025-07-01T11:02:27Z","url":"https://github.com/hossaryp/beta/issues/51"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nEnable admins to send secure, targeted platform notifications to users regarding approvals, system updates, investment opportunities, or risk disclosures.\n\nUser Story:\nAs an admin, I want to compose and send custom notifications to specific users or all users so I can communicate time-sensitive updates and maintain a compliant communication trail.\n\nAcceptance Criteria:\n\nNotification Form:\n\nInputs:\n\nTitle (max 100 characters)\n\nMessage Body (rich text or plain text, 1000 char max)\n\nTarget User Selector:\n\nAll Users\n\nSpecific User(s) by Phone or User ID (multi-select)\n\nOn Submit:\n\nNotification is stored in backend message log\n\nMessage is pushed to:\n\nIn-app frontend inbox (user notification center)\n\nWhatsApp or SMS \n\nUI Requirements:\n\nForm is accessible only to authorized admin\n\nAfter submit, a confirmation message is shown\n\n\nDependencies:\n\nBackend endpoint: POST /api/admin/notify\n\nUser role validation \n\nMessage log system \n\n\n\n","createdAt":"2025-07-01T11:00:07Z","labels":[],"milestone":null,"number":50,"state":"OPEN","title":"Feature: Send Platform Notifications to Users","updatedAt":"2025-07-01T11:00:51Z","url":"https://github.com/hossaryp/beta/issues/50"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nDisplay all asset metadata in the Explore tab card and asset detail view using values stored on-chain and media served from the backend.\n\n User Story:\nAs a user, I want to see all relevant information (ROI, lock period, docs, etc.) about each asset so I can invest with confidence and clarity.\n\nAcceptance Criteria:\n\nExplore Tab Card:\n\nShow:\n\nAsset name\n\nThumbnail image (from backend using thumbnailId)\n\nSector, Location\n\nExpected ROI\n\nLock Period\n\nMinimum Investment\n\nAsset Manager\n\nProgress %, Investors, Raised Amount\n\nAsset Detail View:\n\nShow all fields from metadata:\n\nDescription\n\nROI Model\n\nHighlights\n\nImpact Statement\n\nDownload buttons for:\n\nLegal Document (legalDocURL)\n\nBusiness Document (businessDocURL)\n\nInvestment Agreement\n\n🔗 Dependencies:\n\nContract metadata via getAsset(id) \n\nAdmin entry with complete metadata \n\nBackend image and file serving endpoints\n\nFRA Compliance:\n\nTransparent Asset Presentation\n\nLegal & Business Document Access\n\nClarity on ROI, Risk, and Asset Manager\n\n","createdAt":"2025-07-01T10:56:10Z","labels":[],"milestone":null,"number":49,"state":"OPEN","title":"Feature: Display Full Asset Metadata in Explore Tab and Detail View  for investors","updatedAt":"2025-07-01T10:56:10Z","url":"https://github.com/hossaryp/beta/issues/49"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nEnable admins to input full asset metadata including legal documents and upload media directly from the Admin Panel.\n\nUser Story:\nAs an admin, I want to enter detailed asset information (including ROI, documents, and asset manager) and upload media files so each listed opportunity is clear, compliant, and professional.\n\nAcceptance Criteria:\nUpdate the Create Asset form to include:\n\nAll text fields:\n\nAsset Name\n\nSector (dropdown)\n\nLocation\n\nDescription\n\nLock Period\n\nROI (text or range)\n\nROI Model (dropdown)\n\nMin Investment\n\nAsset Manager\n\nHighlights\n\nUpload fields:\n\nThumbnail (JPG/PNG → backend returns thumbnailId)\n\nLegal Document (PDF → returns legalDocURL)\n\nBusiness Document (PDF → returns businessDocURL)\n\nInvetsment Agreement \n\nOn submission:\n\nPOST metadata + URLs/IDs to backend\n\nBackend calls AssetFactory.createAsset() with all fields\n\nDependencies:\n\nSmart contract support for full metadata \n\nBackend endpoints for:\n\nUploading image → returns thumbnailId\n\nUploading PDFs → returns legalDocURL and businessDocURL and invetsment agreemnetDocURL\n\nFRA Compliance:\n\nPublic Offering Information\n\nROI & Lock Period Transparency\n\nDocument Traceability\n\n","createdAt":"2025-07-01T10:54:04Z","labels":[],"milestone":null,"number":48,"state":"OPEN","title":"Feature: Build Full Metadata Input Form in Admin Panel","updatedAt":"2025-07-01T10:54:04Z","url":"https://github.com/hossaryp/beta/issues/48"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Enhance the AssetFactory smart contract to store and expose all relevant metadata required for Explore tab display, investment decisions, and compliance.\n\nUser Story:\nAs a smart contract developer, I want to store asset metadata (including legal and business information) on-chain so that each asset is traceable, transparent, and legally auditable.\n\nAcceptance Criteria:\nUpdate createAsset() and the asset struct to include the following parameters:\n\nstring assetName\n\nstring sector\n\nstring location\n\nstring description\n\nstring thumbnailId (for backend image matching)\n\nstring lockPeriod\n\nstring minInvestment\n\nstring expectedROI\n\nstring roiModel\n\nstring managerName (Asset Manager)\n\nstring highlights\n\nstring impactStatement\n\nstring legalDocURL\n\nstring businessDocURL\n\nAlso:\n\nEmit all fields (except long text) in AssetCreated event\n\nAdd a getAsset(uint256 id) view function to return the full metadata\n\nDependencies:\n\nAdmin Panel asset creation UI (Issue 15B)\n\nFrontend rendering in Explore tab (Issue 15C)\n\nFRA Compliance:\n\n Investment Disclosure\n\nLegal Documentation Availability\n\nAsset Manager Transparency\n\n","createdAt":"2025-07-01T10:44:16Z","labels":[],"milestone":null,"number":47,"state":"OPEN","title":"Feature: Extend AssetFactory Smart Contract with Metadata","updatedAt":"2025-07-01T10:48:29Z","url":"https://github.com/hossaryp/beta/issues/47"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective: Allow admins to browse all listed investment assets.\n\nUser Story:\nAs an admin, I want to view and filter all investment assets so I can track what’s live, inactive, or bundled for compliance and updates.\n\n\nAcceptance Criteria:\n\nTable view with: name, type, active status\n\nFilters: solo/bundle, active/inactive\n\nClick opens edit modal\n\nDependencies:\n\nAsset creation \n\nAsset data endpoint from backend\n\nBundle view \n\n","createdAt":"2025-07-01T10:31:27Z","labels":[],"milestone":null,"number":46,"state":"OPEN","title":"Feature: Display and Manage Asset List","updatedAt":"2025-07-01T10:31:27Z","url":"https://github.com/hossaryp/beta/issues/46"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"User Story:\nAs an admin, I want to create new assets or grouped bundles so that investors can discover and invest in verified real-world opportunities.\n\nAcceptance Criteria:\n\nForm for asset name, image, type, description\n\nBundle mode: select multiple included asset IDs\n\nOn save, triggers backend + AssetFactory contract\n\nDependencies:\n\nAdmin login and access control \n\nSmart contract: AssetFactory\n\nAsset list view \n\n","createdAt":"2025-07-01T10:30:13Z","labels":[],"milestone":null,"number":45,"state":"OPEN","title":"Feature: Admins can list new solo assets or bundle investments.","updatedAt":"2025-07-01T10:30:13Z","url":"https://github.com/hossaryp/beta/issues/45"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Labels: compliance, smart-contract, reg-s, high-priority\n\n📌 Description\nTo comply with Regulation S Rule 144, all securities must:\n\nCarry a restrictive legend (visible + encoded).\n\nPrevent resale to U.S. persons or within the U.S. for 1 year, unless registered or exempt.\n\nThis protects downstream holders and notifies brokers/investors of resale restrictions.\n\n✅ Acceptance Criteria\n Add Reg S restrictive legend to token metadata (ERC-20 and/or NFT):\n\n\n\"This security is restricted. It may not be offered or sold in the United States or to U.S. persons unless registered under the Securities Act of 1933 or exempt from registration under Regulation S or Rule 144.\"\n In the AssetFactory and TransferAgent contracts:\n\nTag each security/token with a regS_lockUntil timestamp at mint.\n\nIf sender or recipient is marked as U.S. or has U.S. IP/identity, block the transfer unless block.timestamp > lockUntil.\n\n Add onlyAfterRegSUnlock(address from, address to) modifier or logic.\n\n Exempt whitelisted smart contracts (e.g. redemption or treasury).\n\n🧠 Developer Notes\nConsider reusing ConsentManager.getJurisdiction(wallet) for U.S. detection.\n\nLock period = 365 days from issuance.\n\nApply to both transfer() and transferFrom() paths.\n\nDisplay warning on frontend if transfer is attempted during lock period.\n\n","createdAt":"2025-06-30T14:54:29Z","labels":[],"milestone":null,"number":44,"state":"OPEN","title":"Encode Reg S Legend and Enforce Transfer Restrictions via Smart Contract","updatedAt":"2025-06-30T14:54:29Z","url":"https://github.com/hossaryp/beta/issues/44"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"\nLabels: compliance, frontend, blockchain, high-priority\n\n📌 Description\nTo meet Regulation S requirements, we must ensure that every investor:\n\nCertifies they are not a U.S. person.\n\nAcknowledges they will not hedge or resell in the U.S. unless exempt or registered.\n\nThis is mandatory for all investment flows in Pend Beta.\n\n✅ Acceptance Criteria\n Add two checkboxes to InvestmentAgreementModal:\n\n“I certify I am not a U.S. person and am not located in the United States.”\n\n“I agree not to hedge or resell any tokens in the U.S. unless registered or exempt.”\n\n Disable “Continue” / “Invest” button until both are selected.\n\n On click, generate a Reg S consent hash and log it via ConsentManager.sol with:\n\nactionId: \"reg_s_consent\"\n\nUser wallet address\n\nTimestamp\n\n(Optional) Geo-location\n\n Store hash in backend logs for compliance audits.\n\n🧠 Developer Notes\nUse existing ConsentManager.logConsent() helper.\n\nAdd data-testid=\"reg-s-checkbox\" for each checkbox.\n\nInclude Reg S hash in investment payload (optional).\n\nReuse existing OTP/biometric verification flow if needed.","createdAt":"2025-06-30T14:52:58Z","labels":[],"milestone":null,"number":43,"state":"OPEN","title":"feat: Add Reg S Compliance Checkboxes to Investment Flow","updatedAt":"2025-06-30T14:52:58Z","url":"https://github.com/hossaryp/beta/issues/43"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nPresent users with a clean, scrollable list of their recent investment activities. This supports transparency and reinforces trust in the system.\n\nAcceptance Criteria\n Create a new section inside My Investments tab labeled: \"Recent Activity\"\n\n Display user-friendly items such as:\n\n\"You invested EGP 10,000 in Farmland Egypt\"\n\n\"You redeemed EGP 5,000 from Olive Basket\"\n\n Include:\n\nDate of action (e.g. June 20)\n\nAction type icon or color tag\n\nAmount (EGP)\n\n If no activity: show placeholder (“No activity yet — your journey starts when you invest”)\n\nUI Behavior\nList view: Vertical timeline or simple cards\n\nSort order: Newest first\n\nStyle: White background, black text, orange accents\n\nFont: Poppins\n\nTouch safe: No swipe actions or edit/delete\n\n","createdAt":"2025-06-30T13:10:13Z","labels":[],"milestone":null,"number":42,"state":"OPEN","title":"Feature : Frontend Display Recent Activity Feed","updatedAt":"2025-06-30T13:10:13Z","url":"https://github.com/hossaryp/beta/issues/42"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"objective \nProvide a structured feed of all recent user investment actions (e.g. deposits, asset purchases, redemptions) for display in the app. Data must be sourced from logged consent-based transactions or signed actions.\n\nAcceptance Criteria\n Return a user’s most recent 10–20 investment actions in chronological order\n\n Each item includes:\n\nType: investment, deposit, redemption\n\nAsset name\n\nAmount (in EGP)\n\nTimestamp\n\n Only include confirmed actions with successful status\n\n Pull data from:\n\nConsentManager logs (on-chain)\n\nBackend transaction records (verified events)\n\nAPI Specification\nEndpoint: /api/user/:id/activity-feed\n\nReturns (sample):\n\n\"You invested EGP 10,000 in Farmland Egypt on June 20\"\n\n\"You redeemed EGP 5,000 from Olive Basket on June 17\"\n\nRules\nEnsure user identity is authenticated before fetching\n\nDo not include pending, failed, or test transactions\n\nConsent or signature hash should be internally linked to each action for traceability","createdAt":"2025-06-30T13:09:04Z","labels":[],"milestone":null,"number":41,"state":"OPEN","title":"Feature: Backend generate Recent Activity Feed","updatedAt":"2025-06-30T13:09:04Z","url":"https://github.com/hossaryp/beta/issues/41"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Purpose\nDisplay a visual donut chart of the user’s investment allocation across real-world assets making it easy to understand their portfolio composition at a glance.\n\nLayout & Behavior\nDisplayed as a circular donut chart in the My Investments or Profile Summary section\n\nSegments sized according to allocation percentages\n\nLabeling:\n\nEach segment labeled with asset or category name\n\nShow % value inside or on hover\n\nChart is accompanied by:\n\nA total value (e.g. “Total Investment: EGP 60,000”)\n\nA legend listing each segment with name + % + amount\n\n🎨 Design Guidelines\nFont: Poppins\n\nBackground: White\n\nAccent: Use Pend orange (#FF8A34) for highlight segments\n\nLegend: Simple list with text color #000000\n\n🧩 UX Notes\nChart updates dynamically based on latest investment data\n\nIf investment is zero → show placeholder (“No data to display”)\n","createdAt":"2025-06-30T12:43:18Z","labels":[],"milestone":null,"number":40,"state":"OPEN","title":"Feature: Frontend Asset Allocation donut Chart","updatedAt":"2025-06-30T12:43:18Z","url":"https://github.com/hossaryp/beta/issues/40"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"objective \nProvide clean, structured data showing how a user’s investments are distributed across different assets or categories. This data will be used to generate a visual pie chart on the frontend.\n\nResponsibilities\nAggregate all active investments for a specific user\n\nCalculate:\n\nTotal amount invested\n\nProportional allocation for each asset\n\nFormat data to include:\n\nAsset or category name\n\nAbsolute amount (e.g. EGP 24,000)\n\nAllocation percentage (e.g. 40%)\n\nOptional: Include category label to group assets (e.g. Real Estate, Agriculture)\n\nDelivery Format\nStructured list for each user\n\nIncludes one entry per asset (or per category, if grouped)\n\nPercentages must add up to 100%\n\nRound values to 1 decimal place\n\nMust only include active, confirmed investments (exclude pending or redeemed)\n\nUpdate Frequency\nReal-time or pulled upon frontend request\n\nCan be cached briefly if needed (e.g. 5–10 minutes)\n\nData Integrity Notes\nInvestments must be validated before inclusion\n\nPercentages are based on invested amounts, not expected returns\n\nTotals should handle edge cases (e.g. 0 investment = empty chart)\n\n","createdAt":"2025-06-30T12:40:50Z","labels":[],"milestone":null,"number":39,"state":"OPEN","title":"Feature: Backend Asset Allocation for Pie Chart","updatedAt":"2025-06-30T12:40:50Z","url":"https://github.com/hossaryp/beta/issues/39"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nProvide ranked lists of the best and worst performing assets based on ROI (7-day or 30-day window). This supports analytics dashboards, deeper user insights, and investor trend tracking.\n\nAcceptance Criteria\n Calculate ROI (%) for each asset over 7d and 30d intervals\n\n Sort assets by ROI descending (gainers) and ascending (losers)\n\n Store ranked lists in cache (updated every 24h)\n\n Return top 5 gainers and top 5 losers via API\n\nAPI Specification\nEndpoint: /api/assets/performance\n\nResponse:\n\ngainers: [{ id, title, ROI %, category, image }]\n\nlosers: [{ id, title, ROI %, category, image }]\n\nFilters (optional):\n\n?period=7d or ?period=30d\n\nData Rules\nIgnore inactive or frozen assets\n\nExclude assets without enough price history\n\nRank only assets with valid numeric ROI in the selected period\n\nAvoid duplicates between gainers and losers lists\n\nROI Calculation Recap\nROI = (Current Value - Value N Days Ago) / Value N Days Ago × 100\n\nRun calculations via backend job or data pipeline\n\nCache results in Redis or DB for low-latency frontend access\n\nBonus: Add Gainers & Losers Tags\nOptional: add backend logic to label each asset with:\n\nperformanceTag: 'gainer' | 'loser' | null\n\nUseful for UI badges or filtering Explore view","createdAt":"2025-06-30T12:37:35Z","labels":[],"milestone":null,"number":38,"state":"OPEN","title":"Feature: Generate Gainers & Losers List (ROI Ranking)","updatedAt":"2025-06-30T12:37:35Z","url":"https://github.com/hossaryp/beta/issues/38"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nContinuously compute the percentage change in value for each listed asset over time, and identify the top-performing asset based on ROI. This data will support Home page display and internal insights.\n\nScope\nTrack Asset Value Over Time\n\nCalculate Percentage Change (Daily / Weekly / Monthly)\n\nMark Highest Performing Asset\n\nExpose Data via API\n\nAcceptance Criteria\n Store historical price or NAV snapshots for each asset\n\nDaily value log (timestamped)\n\n Calculate change over time periods:\n\nDaily % change (24h)\n\nWeekly % change (7d)\n\nMonthly % change (30d)\n\n Store computed change in each asset’s metadata\n\n Determine the best performing asset based on 7-day ROI\n\nMust be active (not archived or closed)\n\nUpdate every 24h\n\n Expose via:\n\n/api/assets/metrics → for each asset: ROI %, trend\n\n/api/home/top-performer → returns best performing asset with change %\n\nRequirements & Validation\nUse backend cron or scheduled job to run calculation daily\n\nExclude assets with missing or stale data (e.g. < 2 records)\n\nChanges must be stored and not recalculated on every request\n\nIf no asset has positive performance, return most stable one (lowest volatility)\n\nOptional: Tag top performer in Asset DB model (isTopPerformer: true)\n\nCalculation Logic \nFor asset harvest:\n\nLast 7d value = 1150\n\n7d ago = 1000\n→ % change = (1150 - 1000) / 1000 × 100 = +15%","createdAt":"2025-06-30T12:35:48Z","labels":[],"milestone":null,"number":37,"state":"OPEN","title":"Feature: Calculate Asset Change and Best Performer","updatedAt":"2025-06-30T12:35:48Z","url":"https://github.com/hossaryp/beta/issues/37"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nCreate a mobile-first scrollable landing screen that displays curated content, investment categories, featured assets, and educational resources. The page helps users navigate and explore the Pend ecosystem with clarity and engagement.\n\nSections\n1. Banner Carousel\nVisual banners with rotating images\nHighlight current offers, announcements, or campaigns\nSwipeable with indicator dots and auto-scroll behavior\n\n2. Sector Categories\nGrid of visually distinct sectors such as:\nAgriculture\nReal Estate\nPrecious Metals\nRenewable Energy\nTapping a sector opens Explore with filters applied\n\n3. Top Assets\nCurated investment opportunities\nEach card shows:\n  ROI or APY\n  Location or region\n  Thumbnail or real image\n  Minimum contribution amount\nCards are interactive and lead to detailed asset pages\n\n4. Learn with Pend\nTwo horizontally scrollable cards:\n“Pend بالعربي” (Arabic content hub)\n“Pend Hub” (English content hub)\nOpens internal Markdown reader or blog view","createdAt":"2025-06-29T14:43:45Z","labels":[],"milestone":null,"number":36,"state":"OPEN","title":"Feature: Frontend — Home Page","updatedAt":"2025-06-29T14:43:45Z","url":"https://github.com/hossaryp/beta/issues/36"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nProvide reliable, up-to-date content to populate the home screen with structured investment data, curated banners, sector listings, and educational material. Ensure content is cacheable, dynamic, and manageable.\n\nData Endpoints\n1. Banners\nEndpoint: /api/home/banners\nReturns: Array of banner objects with:\nImage URL\nHeadline\nTarget action (link to asset, page, or external)\nValidity dates (start & end)\nManaged via: Admin panel with upload and scheduling support\n\n2. Sectors\nEndpoint: /api/categories/list\nReturns: List of investment sectors with:\nName\nIcon/image reference\nCategory slug or ID\nUsage: Used for filtering Explore and rendering sector tiles\n\n3. Top Assets\nEndpoint: /api/home/top-assets\nReturns: Highlighted assets with fields like:\nTitle\nROI/APY\nImage\nCategory\nLocation\nAsset ID for navigation\nData source: Dynamic from pools or manually flagged in backend\n\n4. Learn Cards\nEndpoint: /api/home/learn\nReturns: Blog/education entries with:\nTitle\nLanguage tag (e.g. ar/en)\nContent type or category\n\nURL to markdown or article\n\nEditable via: Admin content manager","createdAt":"2025-06-29T14:41:23Z","labels":[],"milestone":null,"number":35,"state":"OPEN","title":"Feature:  Backend — Home Page Data Services","updatedAt":"2025-06-29T14:41:35Z","url":"https://github.com/hossaryp/beta/issues/35"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nThe Pend Beta Profile tab lacks structured navigation for managing account preferences, documents, support, and logout. Without this, users are unable to control their experience, access help, or securely end sessions. These functions are essential for a complete and compliant user profile experience.\n\n🎯 Objective\nCreate a clean, mobile-first list UI under the profile card that allows users to:\n\nNavigate to profile information\n\nManage notification preferences\n\nAccess legal documents\n\nContact support\n\nLearn about Pend\n\nLog out safely\n\nEach item should use clear labels, consistent spacing, and optional right arrows to suggest navigation.\n\n🔍 Scope of Work\n✅ Section: Settings & Documents\nTitle (optional): Settings — text-sm, font-semibold, text-black, px-4, mb-2\n\nList Items:\n\nProfile Information → opens modal or screen to edit name, gender, email\n\nNotifications → opens toggle switches for:\n\nInvestment Updates\n\nPlatform Alerts\n\nDocuments \n\nList Style:\n\nEach row:\n\nLabel left-aligned\n\nOptional right arrow (→ icon)\n\nPadding: px-4 py-3\n\nBorder-bottom for separation\n\nFont: Poppins, text-sm, text-black\n\n✅ Section: Support\nList Items:\n\nHelp Center → navigates to FAQ list (e.g. “How do I invest?”)\n\nContact Support → opens WhatsApp link in new tab or deep link\n\nAbout Pend → navigates to screen or modal with mission, legal info, version\n\n✅ Section: Logout\nLogout Button:\n\nFull-width at the bottom of the Profile tab\n\nText: Logout\n\nStyle: text-red-500, border border-red-200, rounded-lg, py-2 px-4, text-center, font-medium, mt-4, mx-4\n\nFunctionality:\n\nSimulate logout by clearing local state\n\nLog to console or redirect to login\n\n✅ Acceptance Criteria\n All list items are styled consistently with proper spacing and font\n\n Profile Information opens editable modal or screen (can be stub for now)\n\n Notification toggles work (local state is fine)\n\n Documents section shows sample files with PDF icon\n\n Help Center and About Pend open informational views\n\n Contact Support opens WhatsApp link\n\n Logout button clears session and logs user out (simulated)\n\n⏳ Priority\nMEDIUM-HIGH — Needed for complete profile functionality, but can follow core investment and verification flows\n\n","createdAt":"2025-06-24T15:53:30Z","labels":[],"milestone":null,"number":26,"state":"OPEN","title":"Feature: Build Settings, Documents, Support, and Logout UI in Profile Tab","updatedAt":"2025-06-24T15:53:30Z","url":"https://github.com/hossaryp/beta/issues/26"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nUsers need visibility into their most recent actions — investments, redemptions, or pending transactions — to build trust and give feedback on platform interactions. Currently, there is no activity log in the Your Investments tab, leaving users unaware of what actions have been executed or are in progress.\n\n🎯 Objective\nDisplay a clean, mobile-friendly activity feed showing the user's 4 most recent transactions. Each entry should clearly state the action, amount, timestamp, and transaction status using visual tags.\n\n🔍 Scope of Work\n✅ Section Header\nTitle: Recent Activity\n\nStyle: text-sm, font-semibold, text-black\n\nPadding: px-4, mt-6, mb-2\n\n✅ Activity Item Layout (List Item)\nEach item should include:\n\nAction Text:\n\nExamples:\n\nInvested in Gold Reserve\n\nSold Date Farm\n\nStyle: text-sm, font-medium, text-black\n\nAmount + Timestamp:\n\nE.g. EGP 1,500 — Jun 20, 11:08 AM\n\nStyle: text-xs, text-gray-500\n\nStatus Tag:\n\nRight-aligned pill tag\n\nText:\n\nSuccessful\n\nPending\n\nRejected\n\nStyling:\n\nBase: text-xs, px-2 py-1, rounded-full\n\nBackground color varies by status:\n\nSuccessful: neutral gray\n\nPending: soft orange\n\nRejected: light gray\n\nCard/List Style:\n\nUse vertical list with spacing between items (gap-3, mb-1)\n\nOptional Card wrapping each row, or border-bottom\n\n✅ Mock Data Format\nts\nCopy\nEdit\nconst activity = [\n  {\n    id: 1,\n    action: \"Invested in Gold Reserve\",\n    amount: \"EGP 3,600\",\n    time: \"Jun 24, 10:03 AM\",\n    status: \"Successful\"\n  },\n  {\n    id: 2,\n    action: \"Sold Date Farm\",\n    amount: \"EGP 1,500\",\n    time: \"Jun 20, 2:48 PM\",\n    status: \"Successful\"\n  },\n  {\n    id: 3,\n    action: \"Invested in Olive Trees\",\n    amount: \"EGP 7,500\",\n    time: \"Jun 18, 9:12 AM\",\n    status: \"Pending\"\n  },\n  {\n    id: 4,\n    action: \"Redemption of Gold Reserve\",\n    amount: \"EGP 1,200\",\n    time: \"Jun 17, 6:01 PM\",\n    status: \"Rejected\"\n  }\n]\n✅ Acceptance Criteria\n Section titled “Recent Activity” below the Portfolio Allocation component\n\n 4 most recent actions shown in clean list format\n\n Each item displays action, amount, time, and status\n\n Status tags styled with appropriate colors and shape\n\n List is fully responsive and styled with proper spacing\n\n No extra features like filters, scroll, or action buttons\n\n⏳ Priority\nHIGH — Core part of investment feedback loop and user trust\n\n![Image](https://github.com/user-attachments/assets/7f875435-aaaa-4149-9e39-2bbb4bd00a8f)","createdAt":"2025-06-24T15:36:53Z","labels":[],"milestone":null,"number":23,"state":"OPEN","title":"Feature: Implement Recent Activity Feed","updatedAt":"2025-06-24T15:36:53Z","url":"https://github.com/hossaryp/beta/issues/23"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nPend Beta users need a simple visual that shows how their portfolio is divided across different assets. A circular chart may not be optimal for mobile screens. A clean, stacked horizontal progress bar offers a more compact, readable alternative while keeping the design lightweight.\n\n🎯 Objective\ncreate a horizontal stacked progress bar that visually represents the user’s portfolio allocation by asset. Each segment corresponds to an asset and its share in the total investment amount.\n\n🔍 Scope of Work\n✅ UI Layout\nSection Title:\n\nText: \"Portfolio Allocation\"\n\nStyle: text-sm, font-semibold, text-black, margin-bottom mb-2\n\nProgress Bar Container:\n\nw-full, h-4, rounded-full, overflow-hidden\n\nbg-[#F3F4F6] as background bar\n\nInner Segments:\n\nRendered as divs with:\n\nflex-grow based on percentage\n\nInline style={{ width: \"60%\" }} etc.\n\nDistinct background color per asset (assigned from config)\n\nNo borders\n\nLegend Below Bar:\n\nRow of:\n\nSmall colored dot\n\nAsset name\n\nPercentage (e.g. “Olive Trees – 60%”)\n\nSpacing: mt-3, gap-3, px-4\n\n✅ Example Asset Allocation Data\nts\nCopy\nEdit\nconst allocation = [\n  { name: \"Olive Trees\", percent: 60, color: \"#FF8A34\" },\n  { name: \"Gold Reserve\", percent: 28, color: \"#D1D5DB\" },\n  { name: \"Date Farm\", percent: 12, color: \"#E5E7EB\" }\n];\n✅ Functional Notes\nUse a component called <PortfolioProgressBar />\n\nAccepts props: data: Allocation[]\n\nUses map() to render dynamic widths\n\nNo animation required\n\nText does not overlap with the bar\n\n✅ Acceptance Criteria\n Portfolio Allocation section is titled and styled properly\n\n Horizontal bar reflects asset split by percentage\n\n Segments accurately sized by percent\n\n Color legend below the bar with asset names and share\n\n Fully responsive on all screen sizes\n\n Aligned with Pend brand design and typography\n\n⏳ Priority\nMEDIUM-HIGH — Important for investment clarity, but follows core value and asset interaction features\n\n![Image](https://github.com/user-attachments/assets/5cb20645-a5f4-46f8-80d4-2f11ff5b1138)\n\n","createdAt":"2025-06-24T15:35:24Z","labels":[],"milestone":null,"number":22,"state":"OPEN","title":"Feature: Implement Portfolio Allocation Using Horizontal Progress Bars","updatedAt":"2025-06-24T15:35:24Z","url":"https://github.com/hossaryp/beta/issues/22"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nCurrently, users can see their asset holdings at a glance but cannot view deeper insights into each investment. This limits understanding of performance and restricts user actions. A personalized detail view is needed — similar to the Explore tab but focused on \"your investment\" (e.g. invested amount, date, returns, actions).\n\n🎯 Objective\nEnhance the Asset Holdings List so each card is clickable. On click, users are routed to a new Asset Detail Page that shows:\n\nOverview of the asset (title, image, description)\n\nPersonal investment summary (money invested, % return, EGP return, date)\n\nAction buttons: Sell and Buy More\n\n🔍 Scope of Work\n✅ UI Requirements: Asset Holdings List\nSame horizontal layout as before\n\nEach asset row is clickable\n\nOn click → route to /portfolio/:assetId\n\nUse useNavigate from React Router\n\n✅ New Route: /portfolio/:assetId\nExample: /portfolio/olive-trees\n\n🖼 Asset Detail Page Layout\n📌 Top Section\nAsset Image (wide banner or square thumbnail)\n\nAsset Name (e.g. Olive Trees)\n\nShort description (can be mock for now)\n\n📊 Investment Summary Box\nStyled Card (bg-[#FFF8F4], rounded-xl, px-4 py-3):\n\nInvested Amount: EGP 7,500\n\ntext-base, font-bold, text-black\n\nReturn in EGP: +EGP 1,875\n\ntext-sm, text-[#FF8A34]\n\nROI %: +25%\n\ntext-sm, same color\n\nInvestment Date: Jun 1, 2025\n\ntext-xs, text-gray-500\n\n🧾 Asset Overview Section (like Explore tab)\nLocation (optional)\n\nAsset type: Agriculture, etc.\n\nDescription or summary of the asset\n\nLegal/custody info (mocked or skipped)\n\n🟧 CTA Section\nTwo buttons:\n\nSell (outlined orange button)\n\nBuy More (filled orange button)\n\nLayout: flex, gap-2, full width on mobile\n\n✅ Data Handling\nUse useParams to fetch assetId\n\nMap to mock investment data based on ID\n\nMock return data per asset:\n\nts\nCopy\nEdit\n{\n  id: 'olive-trees',\n  invested: 7500,\n  returnEGP: 1875,\n  returnPercent: 25,\n  date: '2025-06-01',\n  name: 'Olive Trees',\n  image: '/assets/olive.png',\n  description: 'A long-term sustainable agricultural investment...'\n}\n✅ Acceptance Criteria\n Asset holding cards are clickable\n\n Clicking navigates to /portfolio/:assetId\n\n Detail page displays personal investment summary (EGP + % return)\n\n Includes investment date and action CTAs\n\n Styled to Pend guidelines (white bg, orange accent, rounded)\n\n No unnecessary sections like ROI model or documents — only personal info and overview\n\n Fully mobile responsive\n\n⏳ Priority\nHIGH — Key for transparency and user interaction with their real asset investments\n\n![Image](https://github.com/user-attachments/assets/6faea861-c5aa-4247-a20d-aaa232c196fd)\n","createdAt":"2025-06-24T15:31:35Z","labels":[],"milestone":null,"number":21,"state":"OPEN","title":"Feature: Build Clickable Asset Holdings List with Personalized Asset Detail View","updatedAt":"2025-06-24T15:31:35Z","url":"https://github.com/hossaryp/beta/issues/21"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nUsers currently cannot view the detailed breakdown of which assets they own in the Your Investments screen. A clear list of asset holdings with value, performance, and an action button is essential for transparency, control, and trust in the platform.\n\n🎯 Objective\nCreate a scrollable list of horizontal asset cards, each displaying:\n\nAsset name\n\nThumbnail image\n\nCurrent value in EGP\n\nROI % (positive or negative)\n\n\"Sell\" action button on the right\n\nCards must follow Pend’s visual standards and support interactive \"Sell\" behavior (simulated for now).\n\n🔍 Scope of Work\n✅ UI Requirements (for each card)\nLayout:\n\nHorizontal row\n\nSpacing: gap-3, padding px-4 py-2\n\nCard: bg-white, rounded-xl, shadow-sm, full-width\n\nLeft: Thumbnail Image\n\nSize: w-14 h-14 (56x56px)\n\nShape: rounded-lg\n\nUse local assets or placeholders for:\n\nOlive Trees\n\nGold Reserve\n\nDate Farm\n\nCenter Column:\n\nName: e.g. “Olive Trees”\n\nStyle: text-sm, font-semibold, text-black\n\nValue: e.g. “EGP 7,500”\n\nStyle: text-sm, text-black\n\nReturn: e.g. “+25%” or “-1.2%”\n\nStyle:\n\nIf positive: text-[#FF8A34]\n\nIf negative: text-gray-500\n\nRight: Sell Button\n\nText: Sell\n\nStyle: text-[#FF8A34], border, border-[#FF8A34], text-xs, rounded-md, px-3 py-1\n\nButton height matches vertical center of card\n\n✅ Asset Data (mock array)\nts\nCopy\nEdit\n[\n  {\n    id: 1,\n    name: \"Olive Trees\",\n    value: \"EGP 7,500\",\n    return: \"+25%\",\n    image: \"/assets/olive.png\"\n  },\n  {\n    id: 2,\n    name: \"Gold Reserve\",\n    value: \"EGP 3,600\",\n    return: \"-1.2%\",\n    image: \"/assets/gold.png\"\n  },\n  {\n    id: 3,\n    name: \"Date Farm\",\n    value: \"EGP 1,500\",\n    return: \"+3.7%\",\n    image: \"/assets/date.png\"\n  }\n]\n✅ Interaction\nClicking “Sell” should simulate a confirmation handler (e.g. open modal or log to console)\n\nNo filters or additional actions at this stage\n\n✅ Acceptance Criteria\n List of 3 assets appears below the Investment Value card\n\n Each asset card matches spacing, font, and style guide\n\n ROI color logic applied correctly (orange if +, gray if –)\n\n Sell button is clickable and styled with orange outline\n\n Layout is fully mobile-responsive with consistent spacing\n\n Cards use local image assets (placeholder okay)\n\n⏳ Priority\nHIGH — Essential for user transparency and interaction with their holdings\n\n![Image](https://github.com/user-attachments/assets/a7a2ddb3-a27a-4b04-9f6a-80ce23bd9d4a)","createdAt":"2025-06-24T15:30:01Z","labels":[],"milestone":null,"number":20,"state":"OPEN","title":"Feature: Build Asset Holdings List with Sell Button","updatedAt":"2025-06-24T15:30:01Z","url":"https://github.com/hossaryp/beta/issues/20"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nUsers currently don’t have a visible way to get help or report problems. This creates friction during critical flows like deposits and tier upgrades.\n\n🎯 Objective\nCreate a Support section that gives users instant help through WhatsApp chat, allows them to report problems, and optionally provides FAQ content for common questions.\n\n🧩 Support Options to Include\n📘 Help Topics / FAQ (at first)\nStatic answers to common questions:\n\nHow do I deposit?\n\nHow do I upgrade my tier?\n\nWhy is my deposit pending?\n\n💬 Chat with Support\nButton label: Chat with Support\n\nOpens: WhatsApp chat link to Pend’s official support line\n\nSubtitle: “Need help? Talk to our team instantly”\n\n📎 Report a Problem\nButton label: Report a Problem\n\nOpens a simple form with:\n\nDropdown: Select issue type (Deposit, Tier, Access, Other)\n\nText field: Let the user describe the problem\n\nSubmit: Orange button (#FF8A34) — simulate send\n\n\n📍 Placement\n\ninclude it in the Settings screen under a new \"Support\" category\n\n🎨 Styling Guidelines\n\nWhite background\n\nText color: #000000\n\nCTA buttons and active elements: #FF8A34\n\nFont: Poppins\n\nMobile-first, clean layout\n\n✅ Acceptance Criteria\n\nSupport section is clearly visible and accessible\n\nWhatsApp button opens correctly\n\nIssue report form functions visually (no backend needed yet)\n\nHelp Topics shown as plain text (optional, if included)\n\nNo email support shown anywhere in UI\n\n⏳ Priority: HIGH\nEssential for reducing friction, increasing trust, and resolving user confusion in key flows like identity and deposits.","createdAt":"2025-06-23T13:07:38Z","labels":[],"milestone":null,"number":16,"state":"OPEN","title":"Feature Add Support Access for Users","updatedAt":"2025-06-23T13:07:38Z","url":"https://github.com/hossaryp/beta/issues/16"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nCurrently, users exploring investment pools (e.g. Harvest Fund) have direct, in-app access to legal documents such as SPV registration, redemption terms, or fund structure. \n\n🎯 Objective\nAllow users to access downloadable legal documents (PDFs) directly within each pool’s detail view — clearly labeled, secure, and accessible.\n\n🧩 Scope\n\nUI/UX Update\n\nIn the Pool Detail View, add a new section:\n\nTitle: Documents\n\nTwo categories:\n\nLegal Documents (e.g., SPV registration, fund structure)\n\nBusiness Documents (e.g., feasibility study, investment overview)\n\nEach document:\n\nDisplay a PDF icon in Pend orange (#FF8A34)\n\nClearly labeled (e.g., SPV_Registration.pdf)\n\nInclude a download or open link\n\nBackend Integration\n\nDocuments should be securely served from the backend\n\nUse a safe, access-controlled download endpoint\n\n✅ Acceptance Criteria\n\n“Documents” section appears in pool detail screen\n\nPDFs are categorized and styled with icons\n\nClicking opens or downloads the file in-browser\n\nFiles must open correctly on both mobile and desktop\n\n⏳ Priority\nHIGH – builds user trust, supports due diligence, and ensures regulatory clarity","createdAt":"2025-06-22T13:35:56Z","labels":[],"milestone":null,"number":10,"state":"OPEN","title":"Feature Downloadable Legal Documents in Pools","updatedAt":"2025-06-22T13:35:56Z","url":"https://github.com/hossaryp/beta/issues/10"}]
