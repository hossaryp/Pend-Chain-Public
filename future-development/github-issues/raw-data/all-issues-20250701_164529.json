[{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nAllow admins to browse, search, and audit all platform notifications sent to users, supporting full regulatory traceability.\n\nUser Story:\nAs an admin, I want to view a complete log of notifications sent through the platform so I can verify that critical messages were delivered and properly recorded.\n\nAcceptance Criteria:\n\nLog View Table:\n\nColumns:\n\nTitle\n\nMessage Preview (first 100 characters)\n\nRecipient(s): Single user ID or “All Users”\n\nSent Timestamp\n\nSent By: Admin Name / ID\n\nFilters:\n\nBy Date Range\n\nBy User ID\n\nBy Admin ID\n\nBy Title Keyword\n\nAdditional Features:\n\nClick row → opens full message modal\n\nMessages are read-only for auditing purposes\n\nEach row shows delivery status (Success, Failed, Pending) \n\nDependencies:\n\nNotification system and backend message logger \n\nAdmin login and permissions \n\n","createdAt":"2025-07-01T11:02:27Z","labels":[],"milestone":null,"number":51,"state":"OPEN","title":"Feature:  Display Sent Notification Logs admin panel","updatedAt":"2025-07-01T11:02:27Z","url":"https://github.com/hossaryp/beta/issues/51"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nEnable admins to send secure, targeted platform notifications to users regarding approvals, system updates, investment opportunities, or risk disclosures.\n\nUser Story:\nAs an admin, I want to compose and send custom notifications to specific users or all users so I can communicate time-sensitive updates and maintain a compliant communication trail.\n\nAcceptance Criteria:\n\nNotification Form:\n\nInputs:\n\nTitle (max 100 characters)\n\nMessage Body (rich text or plain text, 1000 char max)\n\nTarget User Selector:\n\nAll Users\n\nSpecific User(s) by Phone or User ID (multi-select)\n\nOn Submit:\n\nNotification is stored in backend message log\n\nMessage is pushed to:\n\nIn-app frontend inbox (user notification center)\n\nWhatsApp or SMS \n\nUI Requirements:\n\nForm is accessible only to authorized admin\n\nAfter submit, a confirmation message is shown\n\n\nDependencies:\n\nBackend endpoint: POST /api/admin/notify\n\nUser role validation \n\nMessage log system \n\n\n\n","createdAt":"2025-07-01T11:00:07Z","labels":[],"milestone":null,"number":50,"state":"OPEN","title":"Feature: Send Platform Notifications to Users","updatedAt":"2025-07-01T11:00:51Z","url":"https://github.com/hossaryp/beta/issues/50"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nDisplay all asset metadata in the Explore tab card and asset detail view using values stored on-chain and media served from the backend.\n\n User Story:\nAs a user, I want to see all relevant information (ROI, lock period, docs, etc.) about each asset so I can invest with confidence and clarity.\n\nAcceptance Criteria:\n\nExplore Tab Card:\n\nShow:\n\nAsset name\n\nThumbnail image (from backend using thumbnailId)\n\nSector, Location\n\nExpected ROI\n\nLock Period\n\nMinimum Investment\n\nAsset Manager\n\nProgress %, Investors, Raised Amount\n\nAsset Detail View:\n\nShow all fields from metadata:\n\nDescription\n\nROI Model\n\nHighlights\n\nImpact Statement\n\nDownload buttons for:\n\nLegal Document (legalDocURL)\n\nBusiness Document (businessDocURL)\n\nInvestment Agreement\n\n🔗 Dependencies:\n\nContract metadata via getAsset(id) \n\nAdmin entry with complete metadata \n\nBackend image and file serving endpoints\n\nFRA Compliance:\n\nTransparent Asset Presentation\n\nLegal & Business Document Access\n\nClarity on ROI, Risk, and Asset Manager\n\n","createdAt":"2025-07-01T10:56:10Z","labels":[],"milestone":null,"number":49,"state":"OPEN","title":"Feature: Display Full Asset Metadata in Explore Tab and Detail View  for investors","updatedAt":"2025-07-01T10:56:10Z","url":"https://github.com/hossaryp/beta/issues/49"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective:\nEnable admins to input full asset metadata including legal documents and upload media directly from the Admin Panel.\n\nUser Story:\nAs an admin, I want to enter detailed asset information (including ROI, documents, and asset manager) and upload media files so each listed opportunity is clear, compliant, and professional.\n\nAcceptance Criteria:\nUpdate the Create Asset form to include:\n\nAll text fields:\n\nAsset Name\n\nSector (dropdown)\n\nLocation\n\nDescription\n\nLock Period\n\nROI (text or range)\n\nROI Model (dropdown)\n\nMin Investment\n\nAsset Manager\n\nHighlights\n\nUpload fields:\n\nThumbnail (JPG/PNG → backend returns thumbnailId)\n\nLegal Document (PDF → returns legalDocURL)\n\nBusiness Document (PDF → returns businessDocURL)\n\nInvetsment Agreement \n\nOn submission:\n\nPOST metadata + URLs/IDs to backend\n\nBackend calls AssetFactory.createAsset() with all fields\n\nDependencies:\n\nSmart contract support for full metadata \n\nBackend endpoints for:\n\nUploading image → returns thumbnailId\n\nUploading PDFs → returns legalDocURL and businessDocURL and invetsment agreemnetDocURL\n\nFRA Compliance:\n\nPublic Offering Information\n\nROI & Lock Period Transparency\n\nDocument Traceability\n\n","createdAt":"2025-07-01T10:54:04Z","labels":[],"milestone":null,"number":48,"state":"OPEN","title":"Feature: Build Full Metadata Input Form in Admin Panel","updatedAt":"2025-07-01T10:54:04Z","url":"https://github.com/hossaryp/beta/issues/48"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Enhance the AssetFactory smart contract to store and expose all relevant metadata required for Explore tab display, investment decisions, and compliance.\n\nUser Story:\nAs a smart contract developer, I want to store asset metadata (including legal and business information) on-chain so that each asset is traceable, transparent, and legally auditable.\n\nAcceptance Criteria:\nUpdate createAsset() and the asset struct to include the following parameters:\n\nstring assetName\n\nstring sector\n\nstring location\n\nstring description\n\nstring thumbnailId (for backend image matching)\n\nstring lockPeriod\n\nstring minInvestment\n\nstring expectedROI\n\nstring roiModel\n\nstring managerName (Asset Manager)\n\nstring highlights\n\nstring impactStatement\n\nstring legalDocURL\n\nstring businessDocURL\n\nAlso:\n\nEmit all fields (except long text) in AssetCreated event\n\nAdd a getAsset(uint256 id) view function to return the full metadata\n\nDependencies:\n\nAdmin Panel asset creation UI (Issue 15B)\n\nFrontend rendering in Explore tab (Issue 15C)\n\nFRA Compliance:\n\n Investment Disclosure\n\nLegal Documentation Availability\n\nAsset Manager Transparency\n\n","createdAt":"2025-07-01T10:44:16Z","labels":[],"milestone":null,"number":47,"state":"OPEN","title":"Feature: Extend AssetFactory Smart Contract with Metadata","updatedAt":"2025-07-01T10:48:29Z","url":"https://github.com/hossaryp/beta/issues/47"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective: Allow admins to browse all listed investment assets.\n\nUser Story:\nAs an admin, I want to view and filter all investment assets so I can track what’s live, inactive, or bundled for compliance and updates.\n\n\nAcceptance Criteria:\n\nTable view with: name, type, active status\n\nFilters: solo/bundle, active/inactive\n\nClick opens edit modal\n\nDependencies:\n\nAsset creation \n\nAsset data endpoint from backend\n\nBundle view \n\n","createdAt":"2025-07-01T10:31:27Z","labels":[],"milestone":null,"number":46,"state":"OPEN","title":"Feature: Display and Manage Asset List","updatedAt":"2025-07-01T10:31:27Z","url":"https://github.com/hossaryp/beta/issues/46"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"User Story:\nAs an admin, I want to create new assets or grouped bundles so that investors can discover and invest in verified real-world opportunities.\n\nAcceptance Criteria:\n\nForm for asset name, image, type, description\n\nBundle mode: select multiple included asset IDs\n\nOn save, triggers backend + AssetFactory contract\n\nDependencies:\n\nAdmin login and access control \n\nSmart contract: AssetFactory\n\nAsset list view \n\n","createdAt":"2025-07-01T10:30:13Z","labels":[],"milestone":null,"number":45,"state":"OPEN","title":"Feature: Admins can list new solo assets or bundle investments.","updatedAt":"2025-07-01T10:30:13Z","url":"https://github.com/hossaryp/beta/issues/45"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Labels: compliance, smart-contract, reg-s, high-priority\n\n📌 Description\nTo comply with Regulation S Rule 144, all securities must:\n\nCarry a restrictive legend (visible + encoded).\n\nPrevent resale to U.S. persons or within the U.S. for 1 year, unless registered or exempt.\n\nThis protects downstream holders and notifies brokers/investors of resale restrictions.\n\n✅ Acceptance Criteria\n Add Reg S restrictive legend to token metadata (ERC-20 and/or NFT):\n\n\n\"This security is restricted. It may not be offered or sold in the United States or to U.S. persons unless registered under the Securities Act of 1933 or exempt from registration under Regulation S or Rule 144.\"\n In the AssetFactory and TransferAgent contracts:\n\nTag each security/token with a regS_lockUntil timestamp at mint.\n\nIf sender or recipient is marked as U.S. or has U.S. IP/identity, block the transfer unless block.timestamp > lockUntil.\n\n Add onlyAfterRegSUnlock(address from, address to) modifier or logic.\n\n Exempt whitelisted smart contracts (e.g. redemption or treasury).\n\n🧠 Developer Notes\nConsider reusing ConsentManager.getJurisdiction(wallet) for U.S. detection.\n\nLock period = 365 days from issuance.\n\nApply to both transfer() and transferFrom() paths.\n\nDisplay warning on frontend if transfer is attempted during lock period.\n\n","createdAt":"2025-06-30T14:54:29Z","labels":[],"milestone":null,"number":44,"state":"OPEN","title":"Encode Reg S Legend and Enforce Transfer Restrictions via Smart Contract","updatedAt":"2025-06-30T14:54:29Z","url":"https://github.com/hossaryp/beta/issues/44"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"\nLabels: compliance, frontend, blockchain, high-priority\n\n📌 Description\nTo meet Regulation S requirements, we must ensure that every investor:\n\nCertifies they are not a U.S. person.\n\nAcknowledges they will not hedge or resell in the U.S. unless exempt or registered.\n\nThis is mandatory for all investment flows in Pend Beta.\n\n✅ Acceptance Criteria\n Add two checkboxes to InvestmentAgreementModal:\n\n“I certify I am not a U.S. person and am not located in the United States.”\n\n“I agree not to hedge or resell any tokens in the U.S. unless registered or exempt.”\n\n Disable “Continue” / “Invest” button until both are selected.\n\n On click, generate a Reg S consent hash and log it via ConsentManager.sol with:\n\nactionId: \"reg_s_consent\"\n\nUser wallet address\n\nTimestamp\n\n(Optional) Geo-location\n\n Store hash in backend logs for compliance audits.\n\n🧠 Developer Notes\nUse existing ConsentManager.logConsent() helper.\n\nAdd data-testid=\"reg-s-checkbox\" for each checkbox.\n\nInclude Reg S hash in investment payload (optional).\n\nReuse existing OTP/biometric verification flow if needed.","createdAt":"2025-06-30T14:52:58Z","labels":[],"milestone":null,"number":43,"state":"OPEN","title":"feat: Add Reg S Compliance Checkboxes to Investment Flow","updatedAt":"2025-06-30T14:52:58Z","url":"https://github.com/hossaryp/beta/issues/43"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nPresent users with a clean, scrollable list of their recent investment activities. This supports transparency and reinforces trust in the system.\n\nAcceptance Criteria\n Create a new section inside My Investments tab labeled: \"Recent Activity\"\n\n Display user-friendly items such as:\n\n\"You invested EGP 10,000 in Farmland Egypt\"\n\n\"You redeemed EGP 5,000 from Olive Basket\"\n\n Include:\n\nDate of action (e.g. June 20)\n\nAction type icon or color tag\n\nAmount (EGP)\n\n If no activity: show placeholder (“No activity yet — your journey starts when you invest”)\n\nUI Behavior\nList view: Vertical timeline or simple cards\n\nSort order: Newest first\n\nStyle: White background, black text, orange accents\n\nFont: Poppins\n\nTouch safe: No swipe actions or edit/delete\n\n","createdAt":"2025-06-30T13:10:13Z","labels":[],"milestone":null,"number":42,"state":"OPEN","title":"Feature : Frontend Display Recent Activity Feed","updatedAt":"2025-06-30T13:10:13Z","url":"https://github.com/hossaryp/beta/issues/42"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"objective \nProvide a structured feed of all recent user investment actions (e.g. deposits, asset purchases, redemptions) for display in the app. Data must be sourced from logged consent-based transactions or signed actions.\n\nAcceptance Criteria\n Return a user’s most recent 10–20 investment actions in chronological order\n\n Each item includes:\n\nType: investment, deposit, redemption\n\nAsset name\n\nAmount (in EGP)\n\nTimestamp\n\n Only include confirmed actions with successful status\n\n Pull data from:\n\nConsentManager logs (on-chain)\n\nBackend transaction records (verified events)\n\nAPI Specification\nEndpoint: /api/user/:id/activity-feed\n\nReturns (sample):\n\n\"You invested EGP 10,000 in Farmland Egypt on June 20\"\n\n\"You redeemed EGP 5,000 from Olive Basket on June 17\"\n\nRules\nEnsure user identity is authenticated before fetching\n\nDo not include pending, failed, or test transactions\n\nConsent or signature hash should be internally linked to each action for traceability","createdAt":"2025-06-30T13:09:04Z","labels":[],"milestone":null,"number":41,"state":"OPEN","title":"Feature: Backend generate Recent Activity Feed","updatedAt":"2025-06-30T13:09:04Z","url":"https://github.com/hossaryp/beta/issues/41"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Purpose\nDisplay a visual donut chart of the user’s investment allocation across real-world assets making it easy to understand their portfolio composition at a glance.\n\nLayout & Behavior\nDisplayed as a circular donut chart in the My Investments or Profile Summary section\n\nSegments sized according to allocation percentages\n\nLabeling:\n\nEach segment labeled with asset or category name\n\nShow % value inside or on hover\n\nChart is accompanied by:\n\nA total value (e.g. “Total Investment: EGP 60,000”)\n\nA legend listing each segment with name + % + amount\n\n🎨 Design Guidelines\nFont: Poppins\n\nBackground: White\n\nAccent: Use Pend orange (#FF8A34) for highlight segments\n\nLegend: Simple list with text color #000000\n\n🧩 UX Notes\nChart updates dynamically based on latest investment data\n\nIf investment is zero → show placeholder (“No data to display”)\n","createdAt":"2025-06-30T12:43:18Z","labels":[],"milestone":null,"number":40,"state":"OPEN","title":"Feature: Frontend Asset Allocation donut Chart","updatedAt":"2025-06-30T12:43:18Z","url":"https://github.com/hossaryp/beta/issues/40"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"objective \nProvide clean, structured data showing how a user’s investments are distributed across different assets or categories. This data will be used to generate a visual pie chart on the frontend.\n\nResponsibilities\nAggregate all active investments for a specific user\n\nCalculate:\n\nTotal amount invested\n\nProportional allocation for each asset\n\nFormat data to include:\n\nAsset or category name\n\nAbsolute amount (e.g. EGP 24,000)\n\nAllocation percentage (e.g. 40%)\n\nOptional: Include category label to group assets (e.g. Real Estate, Agriculture)\n\nDelivery Format\nStructured list for each user\n\nIncludes one entry per asset (or per category, if grouped)\n\nPercentages must add up to 100%\n\nRound values to 1 decimal place\n\nMust only include active, confirmed investments (exclude pending or redeemed)\n\nUpdate Frequency\nReal-time or pulled upon frontend request\n\nCan be cached briefly if needed (e.g. 5–10 minutes)\n\nData Integrity Notes\nInvestments must be validated before inclusion\n\nPercentages are based on invested amounts, not expected returns\n\nTotals should handle edge cases (e.g. 0 investment = empty chart)\n\n","createdAt":"2025-06-30T12:40:50Z","labels":[],"milestone":null,"number":39,"state":"OPEN","title":"Feature: Backend Asset Allocation for Pie Chart","updatedAt":"2025-06-30T12:40:50Z","url":"https://github.com/hossaryp/beta/issues/39"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nProvide ranked lists of the best and worst performing assets based on ROI (7-day or 30-day window). This supports analytics dashboards, deeper user insights, and investor trend tracking.\n\nAcceptance Criteria\n Calculate ROI (%) for each asset over 7d and 30d intervals\n\n Sort assets by ROI descending (gainers) and ascending (losers)\n\n Store ranked lists in cache (updated every 24h)\n\n Return top 5 gainers and top 5 losers via API\n\nAPI Specification\nEndpoint: /api/assets/performance\n\nResponse:\n\ngainers: [{ id, title, ROI %, category, image }]\n\nlosers: [{ id, title, ROI %, category, image }]\n\nFilters (optional):\n\n?period=7d or ?period=30d\n\nData Rules\nIgnore inactive or frozen assets\n\nExclude assets without enough price history\n\nRank only assets with valid numeric ROI in the selected period\n\nAvoid duplicates between gainers and losers lists\n\nROI Calculation Recap\nROI = (Current Value - Value N Days Ago) / Value N Days Ago × 100\n\nRun calculations via backend job or data pipeline\n\nCache results in Redis or DB for low-latency frontend access\n\nBonus: Add Gainers & Losers Tags\nOptional: add backend logic to label each asset with:\n\nperformanceTag: 'gainer' | 'loser' | null\n\nUseful for UI badges or filtering Explore view","createdAt":"2025-06-30T12:37:35Z","labels":[],"milestone":null,"number":38,"state":"OPEN","title":"Feature: Generate Gainers & Losers List (ROI Ranking)","updatedAt":"2025-06-30T12:37:35Z","url":"https://github.com/hossaryp/beta/issues/38"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nContinuously compute the percentage change in value for each listed asset over time, and identify the top-performing asset based on ROI. This data will support Home page display and internal insights.\n\nScope\nTrack Asset Value Over Time\n\nCalculate Percentage Change (Daily / Weekly / Monthly)\n\nMark Highest Performing Asset\n\nExpose Data via API\n\nAcceptance Criteria\n Store historical price or NAV snapshots for each asset\n\nDaily value log (timestamped)\n\n Calculate change over time periods:\n\nDaily % change (24h)\n\nWeekly % change (7d)\n\nMonthly % change (30d)\n\n Store computed change in each asset’s metadata\n\n Determine the best performing asset based on 7-day ROI\n\nMust be active (not archived or closed)\n\nUpdate every 24h\n\n Expose via:\n\n/api/assets/metrics → for each asset: ROI %, trend\n\n/api/home/top-performer → returns best performing asset with change %\n\nRequirements & Validation\nUse backend cron or scheduled job to run calculation daily\n\nExclude assets with missing or stale data (e.g. < 2 records)\n\nChanges must be stored and not recalculated on every request\n\nIf no asset has positive performance, return most stable one (lowest volatility)\n\nOptional: Tag top performer in Asset DB model (isTopPerformer: true)\n\nCalculation Logic \nFor asset harvest:\n\nLast 7d value = 1150\n\n7d ago = 1000\n→ % change = (1150 - 1000) / 1000 × 100 = +15%","createdAt":"2025-06-30T12:35:48Z","labels":[],"milestone":null,"number":37,"state":"OPEN","title":"Feature: Calculate Asset Change and Best Performer","updatedAt":"2025-06-30T12:35:48Z","url":"https://github.com/hossaryp/beta/issues/37"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nCreate a mobile-first scrollable landing screen that displays curated content, investment categories, featured assets, and educational resources. The page helps users navigate and explore the Pend ecosystem with clarity and engagement.\n\nSections\n1. Banner Carousel\nVisual banners with rotating images\nHighlight current offers, announcements, or campaigns\nSwipeable with indicator dots and auto-scroll behavior\n\n2. Sector Categories\nGrid of visually distinct sectors such as:\nAgriculture\nReal Estate\nPrecious Metals\nRenewable Energy\nTapping a sector opens Explore with filters applied\n\n3. Top Assets\nCurated investment opportunities\nEach card shows:\n  ROI or APY\n  Location or region\n  Thumbnail or real image\n  Minimum contribution amount\nCards are interactive and lead to detailed asset pages\n\n4. Learn with Pend\nTwo horizontally scrollable cards:\n“Pend بالعربي” (Arabic content hub)\n“Pend Hub” (English content hub)\nOpens internal Markdown reader or blog view","createdAt":"2025-06-29T14:43:45Z","labels":[],"milestone":null,"number":36,"state":"OPEN","title":"Feature: Frontend — Home Page","updatedAt":"2025-06-29T14:43:45Z","url":"https://github.com/hossaryp/beta/issues/36"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nProvide reliable, up-to-date content to populate the home screen with structured investment data, curated banners, sector listings, and educational material. Ensure content is cacheable, dynamic, and manageable.\n\nData Endpoints\n1. Banners\nEndpoint: /api/home/banners\nReturns: Array of banner objects with:\nImage URL\nHeadline\nTarget action (link to asset, page, or external)\nValidity dates (start & end)\nManaged via: Admin panel with upload and scheduling support\n\n2. Sectors\nEndpoint: /api/categories/list\nReturns: List of investment sectors with:\nName\nIcon/image reference\nCategory slug or ID\nUsage: Used for filtering Explore and rendering sector tiles\n\n3. Top Assets\nEndpoint: /api/home/top-assets\nReturns: Highlighted assets with fields like:\nTitle\nROI/APY\nImage\nCategory\nLocation\nAsset ID for navigation\nData source: Dynamic from pools or manually flagged in backend\n\n4. Learn Cards\nEndpoint: /api/home/learn\nReturns: Blog/education entries with:\nTitle\nLanguage tag (e.g. ar/en)\nContent type or category\n\nURL to markdown or article\n\nEditable via: Admin content manager","createdAt":"2025-06-29T14:41:23Z","labels":[],"milestone":null,"number":35,"state":"OPEN","title":"Feature:  Backend — Home Page Data Services","updatedAt":"2025-06-29T14:41:35Z","url":"https://github.com/hossaryp/beta/issues/35"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nAllow users to upload identity documents in three separate steps — front side, back side, and a live selfie — as part of the KYC flow, in compliance with FRA’s digital identity verification standards.\n\n Acceptance Criteria\n Create a new screen component: DocumentUploadScreen.tsx\n\nBreak the document upload into 3 distinct steps/tabs:\nFront Side of ID\n  2- Title: \"Upload the front of your ID\"\n  3- Image picker for gallery or camera\n  4- Show preview after selection\n  5- Require confirmation before proceeding\nBack Side of ID\n  1- Title: \"Upload the back of your ID\"\n  2- Same image input behavior as above\n  3- Preview and proceed control\nLive Selfie Photo\n  1- Title: \"Take a live photo of yourself\"\n  2- Camera access required (disable gallery)\n  3- Require real-time photo capture (no file upload)\n  4- Show confirmation before submission\n After the 3rd step, user proceeds to a review and submit screen\n Validate that all three files are present before allowing submission\n\nFRA Compliance (Section: Annex No. 1)\n Front and back ID images = Possession Factor\n Live selfie = Presence Factor\n Selfie must be captured in real-time, not from storage\n Data must be securely handled and not cached in frontend memory after submission\n All uploaded files must be linked to the verified user and submitted via secure endpoint\n\n","createdAt":"2025-06-29T14:05:21Z","labels":[],"milestone":null,"number":34,"state":"CLOSED","title":"Issue: Implement 3-Step Document Upload Flow (Front, Back, Live Photo)","updatedAt":"2025-06-30T17:50:46Z","url":"https://github.com/hossaryp/beta/issues/34"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nAllow users to securely reset their 6-digit PIN through the app interface by verifying their identity using OTP (Possession Factor), in accordance with FRA’s identity authentication rules.\n\nAcceptance Criteria\n Add a “Forgot PIN?” link to the PIN entry modal or lock screen\n On tap, redirect user to ForgotPinScreen\n Forgot PIN flow must include the following steps:\n      1-Display user’s masked phone number\n      2-Tap “Send OTP” → Call existing OTP API\n      3-Show OTP input field\n      4-lidate OTP → Show new PIN form\n      5-Enter + confirm 6-digit PIN (masked)\n      6-Submit → Call POST /api/pin/reset\n      7-On success → Redirect to unlocked state (Explore or Home)\n PIN fields must:\n    1-Accept only 6 numeric digits\n    2-Mask input (••••••)\n    3-Show error if PINs don’t match\n Show error states for:\n   1-OTP invalid or expired\n   2-PIN format incorrect\n   3-General failure from backend\n Include loading states, success feedback, and clear UI steps\n\nFRA Compliance (Frontend Role)\n OTP = Possession Factor, mandatory before allowing PIN reset\n PIN = Knowledge Factor, must follow 6-digit masked UI standard\n User identity must already be established (logged-in session with verified phone)\n No PIN value may be stored in memory, localStorage, or passed unmasked in requests\n\nUI Components Involved\n EnterPinModal.tsx → Add “Forgot PIN?”\n ForgotPinScreen.tsx → OTP input and PIN reset UI\n PinForm.tsx → Reusable masked 6-digit PIN input\n OtpInput.tsx → Reuse existing OTP input with 6-digit support\n Success message → “Your PIN has been reset successfully”","createdAt":"2025-06-29T13:41:30Z","labels":[],"milestone":null,"number":33,"state":"CLOSED","title":"Feature: Implement “Forgot PIN” Flow in UI","updatedAt":"2025-07-01T09:17:23Z","url":"https://github.com/hossaryp/beta/issues/33"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":" **Objective**\nImplement a secure flow to allow users to reset their 6-digit PIN using verified OTP authentication, in compliance with FRA’s digital identity and multi-factor verification rules.\n\n**Acceptance Criteria**\n Create POST /api/pin/reset endpoint\n Request must include:\n      1-Verified user ID (or phone number)\n      2-Valid OTP (previously issued and matched via possession factor)\n      3-New 6-digit PIN\n OTP must be checked against recent issuance (FRA requires Possession Factor for resets)\n New PIN must be validated as numeric and exactly 6 digits\n Hash new PIN securely using bcrypt or argon2\n Overwrite old PIN hash in backend storage\n Return 200 OK on success\n Return appropriate error if:\n        1- OTP is invalid or expired\n        2-PIN format is incorrect\n        3-User does not exist or is not eligible to reset\n\n**FRA Compliance Requirements Applied**\n Reset flow uses OTP as a Possession Factor\n New PIN becomes part of the user’s active multi-factor identity\n Reset event must be securely logged (see below)\n This action is part of digital identity lifecycle, governed by FRA Section Two and Annex 1\n\n **Security Notes**\n Never log raw or hashed PIN or OTP\n Hash must be generated server-side only\n Reset attempts must be rate-limited to prevent abuse\n Ensure session is not reused across devices after PIN reset\n\n**Identity Ledger Logging (Recommended)**\nLog a “PIN_RESET” event to backend’s digital identity ledger:\n  1- User ID\n  2-Timestamp\n  3-OTP verified status\n  4-Reset success/failure status","createdAt":"2025-06-29T13:35:06Z","labels":[],"milestone":null,"number":32,"state":"CLOSED","title":"Feature: Backend Endpoint for “Forgot PIN” Flow","updatedAt":"2025-07-01T09:17:22Z","url":"https://github.com/hossaryp/beta/issues/32"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nCreate a secure backend endpoint to receive and store a user’s 6-digit PIN after legal agreement acceptance, in compliance with FRA’s requirements for digital identity authentication.\n\nAcceptance Criteria\nCreate POST /api/pin/set endpoint (accessible only after verified legal consent)\nRequest must include:\n      1- Verified user ID (or verified phone linked to identity)\n      2-A 6-digit numeric PIN (Knowledge Factor)\n Validate that PIN is numeric and exactly 6 digits\n Hash the PIN securely using a strong algorithm (e.g. bcrypt or argon2)\n Store the hash in the backend database, associated with the user’s digital identity record\n Return 200 OK on success\n Return appropriate error on failure:\n      1- Invalid format\n      2-PIN already set (unless part of reset flow)\n\nFRA Compliance Requirements Applied\n PIN is treated as a Knowledge Factor Group element under FRA Section Two\n It must be used with a Possession (e.g. OTP) or Presence (e.g. device) factor for identity verification and gated actions\n PIN setup must occur within a controlled digital identity flow (after legal consent but before full KYC)\n All PIN-related actions must be traceable as part of the Digital Identity Ledger or backend logs\n\n Security Notes (FRA-Aligned)\n Never log raw or hashed PIN at any point\n All PIN hashing must be performed on the server\n Do not store the PIN in frontend memory or browser storage\n Avoid insecure hashing (MD5, SHA1) — use only approved methods\n Ensure data is retained in a secure digital record, as required under Annex 1 of the FRA decree\n\n🧾 Audit Trail Enhancement\nLog PIN setup event in your backend’s Digital Identity Ledger (not the PIN itself)\nTimestamp\nUser ID\nDevice metadata (if available)","createdAt":"2025-06-29T13:17:13Z","labels":[],"milestone":null,"number":31,"state":"CLOSED","title":"Feature: Backend Endpoint to Store 6-Digit PIN","updatedAt":"2025-06-30T17:48:11Z","url":"https://github.com/hossaryp/beta/issues/31"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"As a user, I want to:\nCreate and confirm a 6-digit PIN right after accepting legal terms, so I can secure my session and protect access to sensitive actions in the app.\n\nAcceptance Criteria\nAfter legal terms are accepted, the user is directed to the Set PIN screen\nThe screen displays:\nTitle: “Create your 6-digit PIN”\nSubtext: “This PIN will protect your wallet and investments”\n \nUser must:\nEnter a 6-digit numeric PIN (masked input)\nConfirm the same 6-digit PIN\nTap “Confirm” to continue\n PIN mismatch triggers error: \"PINs do not match\"\n\n On confirmation:\nPIN is hashed using bcrypt or argon2\nHash is sent to POST /api/pin/set\nServer stores it securely, associated with user ID / phone\nUser is then forwarded to KYC flow or Home Tab ","createdAt":"2025-06-29T13:12:39Z","labels":[],"milestone":null,"number":30,"state":"CLOSED","title":"Feature:  Set 6-Digit PIN After Legal Consent","updatedAt":"2025-06-30T16:39:20Z","url":"https://github.com/hossaryp/beta/issues/30"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"roblem Summary\nIn Pend Beta, users do not fund a balance in advance. Instead, they initiate a payment directly when investing in an asset. This flow must be simple, clear, and legally compliant — ensuring user agreement, consent, and structured payment instruction before proceeding.\n\n🎯 Objective\nDesign and implement a payment initiation flow that begins only after the user selects an asset, agrees to investment terms, and confirms consent. The user then selects a payment method and follows instructions to complete the transaction.\n\n🔍 Scope of Work\n✅ Entry Point\nTriggered from Invest Now CTA on any asset\n\nInvestment form appears only after:\n\nUser views asset details\n\nUser accepts investment terms\n\nConsent signature is recorded via ConsentManager\n\n✅ Payment Method Selection Screen\nUI shows available methods:\n\nBank Transfer\n\nCredit/Debit Card\n\nLayout:\n\nTitle: \"Select Payment Method\"\n\nEach method as a styled card with icon + short description\n\nOn selection, proceed to instructions\n\n✅ Payment Instruction Screen\nBased on chosen method:\n\nBank Transfer:\n\nShow: Bank Name, Account Number/IBAN, Reference Code\n\nInstructional text: “Please transfer the exact amount and include your reference code.”\n\nCredit Card:\n\nShow: mock form or placeholder (no actual gateway)\n\nButton: \"Confirm Payment\" → mock confirmation\n\nCTA Button: \"Confirm Payment\"\n\nOn click:\n\nStore paymentMethod in transaction metadata\n\nSet status to pending\n\nEmit ConsentVerified on-chain\n\n✅ Metadata Logging & Status\nStore in backend:\n\nUser identity hash\n\nPayment method selected\n\nAsset ID\n\nConsent signature hash\n\nInitial status: pending\n\nShow user:\n\nConfirmation screen: \"Payment Pending\"\n\nOptional: link to transaction activity or wallet\n\n✅ Acceptance Criteria\n Payment flow starts only after terms are accepted\n\n User selects payment method: Bank or Card\n\n Clear, method-specific instructions shown\n\n Confirm button logs metadata and triggers consent signature\n\n User sees success confirmation with status pending\n\n Fully styled to match Pend guidelines (Poppins, orange accents, white background)\n\n No wallet top-up or balance system used\n\n⏳ Priority\nHIGH — Required for compliant and user-friendly investment execution\n","createdAt":"2025-06-24T16:07:06Z","labels":[],"milestone":null,"number":29,"state":"CLOSED","title":"Feature Implement Payment Process Flow on Investment action","updatedAt":"2025-06-25T07:51:11Z","url":"https://github.com/hossaryp/beta/issues/29"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\n\nThe Pend Beta app currently lacks a consistent bottom navigation bar for screen switching. Without it, users cannot easily move between core areas like Explore, My Investment, and Profile. A sticky mobile nav bar is essential for usability, discoverability, and a polished app experience.\n\n🎯 Objective\n\nCreate a **3-tab mobile navigation bar** fixed at the bottom of the screen, enabling smooth navigation between:\n\n1. Explore\n2. My Investment\n3. Profile\n\nIt should follow Pend’s branding (icon-first, minimal labels, orange highlight for active tab).\n\n\n\n🔍 Scope of Work\n\n✅ Layout & Styling\n\n* **Container:**\n\n  * Fixed to bottom (`fixed bottom-0 left-0 right-0`)\n  * Background: white\n  * Shadow: `shadow-md`\n  * Padding: `py-2 px-6`\n  * Flex layout: `flex justify-between items-center`\n\n* **Tab Item:**\n\n  * Icon (SVG or from lucide-react)\n  * Label below icon (e.g., `Explore`, `Profile`)\n  * Font: `Poppins`, `text-xs`, `text-center`\n  * Layout: vertical (`flex flex-col items-center gap-1`)\n\n* **Active Tab Styling:**\n\n  * Icon and label use brand orange `#FF8A34`\n  * Inactive tabs use muted gray `#A3A3A3` or `text-gray-400`\n\n* **Icon Size:**\n\n  * About `24px` width, using viewBox or class sizing\n\n---\n\n✅ Tabs & Routing\n\n| Tab           | Icon                              | Route        |\n| ------------- | --------------------------------- | ------------ |\n| Explore       | Leaf (🟢 `lucide:leaf`)           | `/explore`   |\n| My Investment | Pie Chart (🟠 `lucide:pie-chart`) | `/portfolio` |\n| Profile       | User (🟠 `lucide:user`)           | `/profile`   |\n\n* Use `React Router` for navigation\n* Active tab detected via `useLocation()`\n* Use `onClick` to navigate on tab press\n\n\n✅ Acceptance Criteria\n\n* [ ] Bar is fixed at bottom and visible on all main screens\n* [ ] Tabs include icon + label, with orange styling for active tab\n* [ ] Icons match those shown in uploaded screenshot\n* [ ] Responsive on all mobile screen sizes (min 360px)\n* [ ] Tab click updates route via React Router without reload\n* [ ] Smooth transition between pages\n* [ ] No top border, no animations, no labels outside of icons\n\n\n⏳ Priority\n\n**HIGH** — Foundational for user navigation across the app\n\n![Image](https://github.com/user-attachments/assets/c3139bb0-5014-4ab1-824a-bc95b5275996)","createdAt":"2025-06-24T16:00:39Z","labels":[],"milestone":null,"number":28,"state":"CLOSED","title":"Feature: Build Bottom Navigation Bar for Pend Beta App","updatedAt":"2025-06-25T07:52:44Z","url":"https://github.com/hossaryp/beta/issues/28"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nCurrently, users cannot end their session within the Pend Beta app. Without a logout feature, user sessions persist indefinitely, which poses security and privacy concerns. A logout button is essential for session management, especially on shared or mobile devices.\n\n🎯 Objective\nAdd a logout button at the bottom of the Profile tab that:\n\nClears the user's session and local data\n\nSimulates logout behavior by redirecting to the login or welcome screen\n\nFollows Pend’s visual style and mobile responsiveness\n\n🔍 Scope of Work\n✅ UI Design\nButton Text: Logout\n\nStyle:\n\nText color: text-red-500\n\nOutline: border border-red-200\n\nBorder radius: rounded-lg\n\nFont: text-sm, font-medium\n\nSpacing: mx-4 mt-4 mb-6, py-2 px-4, full-width\n\nPlacement:\n\nBottom of the Profile tab, below all settings and support sections\n\n✅ Functionality\nOn click:\n\nClear all session-related data (mocked or real)\n\nLocal storage / context / state cleanup\n\nOptionally reset navigation stack\n\nRedirect to:\n\nLogin screen (if available), or\n\nWelcome/landing screen\n\nAdd console.log(\"User logged out\") for dev feedback\n\n✅ Optional Enhancement\nShow a confirmation modal:\n\nTitle: “Are you sure you want to logout?”\n\nButtons: Cancel / Confirm\n\nOnly if time allows\n\n✅ Acceptance Criteria\n Logout button is styled and visible on all mobile screen sizes\n\n Clicking it clears session and redirects user to login/welcome\n\n Uses proper spacing, color, and font per Pend guidelines\n\n (Optional) Confirmation modal is shown before logout\n\n No bugs on repeated logout attempts or back navigation\n\n⏳ Priority\nHIGH — Critical for security, especially in mobile-first applications","createdAt":"2025-06-24T15:55:47Z","labels":[],"milestone":null,"number":27,"state":"CLOSED","title":"Feature: Implement Logout Functionality in Profile Tab","updatedAt":"2025-06-25T07:52:53Z","url":"https://github.com/hossaryp/beta/issues/27"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nThe Pend Beta Profile tab lacks structured navigation for managing account preferences, documents, support, and logout. Without this, users are unable to control their experience, access help, or securely end sessions. These functions are essential for a complete and compliant user profile experience.\n\n🎯 Objective\nCreate a clean, mobile-first list UI under the profile card that allows users to:\n\nNavigate to profile information\n\nManage notification preferences\n\nAccess legal documents\n\nContact support\n\nLearn about Pend\n\nLog out safely\n\nEach item should use clear labels, consistent spacing, and optional right arrows to suggest navigation.\n\n🔍 Scope of Work\n✅ Section: Settings & Documents\nTitle (optional): Settings — text-sm, font-semibold, text-black, px-4, mb-2\n\nList Items:\n\nProfile Information → opens modal or screen to edit name, gender, email\n\nNotifications → opens toggle switches for:\n\nInvestment Updates\n\nPlatform Alerts\n\nDocuments \n\nList Style:\n\nEach row:\n\nLabel left-aligned\n\nOptional right arrow (→ icon)\n\nPadding: px-4 py-3\n\nBorder-bottom for separation\n\nFont: Poppins, text-sm, text-black\n\n✅ Section: Support\nList Items:\n\nHelp Center → navigates to FAQ list (e.g. “How do I invest?”)\n\nContact Support → opens WhatsApp link in new tab or deep link\n\nAbout Pend → navigates to screen or modal with mission, legal info, version\n\n✅ Section: Logout\nLogout Button:\n\nFull-width at the bottom of the Profile tab\n\nText: Logout\n\nStyle: text-red-500, border border-red-200, rounded-lg, py-2 px-4, text-center, font-medium, mt-4, mx-4\n\nFunctionality:\n\nSimulate logout by clearing local state\n\nLog to console or redirect to login\n\n✅ Acceptance Criteria\n All list items are styled consistently with proper spacing and font\n\n Profile Information opens editable modal or screen (can be stub for now)\n\n Notification toggles work (local state is fine)\n\n Documents section shows sample files with PDF icon\n\n Help Center and About Pend open informational views\n\n Contact Support opens WhatsApp link\n\n Logout button clears session and logs user out (simulated)\n\n⏳ Priority\nMEDIUM-HIGH — Needed for complete profile functionality, but can follow core investment and verification flows\n\n","createdAt":"2025-06-24T15:53:30Z","labels":[],"milestone":null,"number":26,"state":"OPEN","title":"Feature: Build Settings, Documents, Support, and Logout UI in Profile Tab","updatedAt":"2025-06-24T15:53:30Z","url":"https://github.com/hossaryp/beta/issues/26"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nThe current profile experience is fragmented — user info and verification status are split across multiple components. This makes it harder for users to understand their identity status, what’s left to complete, and how close they are to being verified. A unified card solves this and gives a clean, guided user experience.\n\n🎯 Objective\nCreate a single combined card inside the Profile tab that displays:\n\nUser ID\n\n“User Since” date\n\nTotal Invested\n\nVerification status: 1/5 steps complete\n\nStep label: \"Next: Complete Profile Information\"\n\nStatus tag:\n\nIf all steps complete → Verified (orange text + border)\n\nIf incomplete → Not Verified (gray border, filled text)\n\nInclude a CTA button to “Complete Profile Now”.\n\n🔍 Scope of Work\n✅ UI Layout\nCard Container:\n\nbg-white, rounded-xl, shadow-sm, px-4 py-4\n\nMargin: mt-4, mb-3, w-full\n\nTop Section (Account Info):\n\nLabel: User ID → text-xs, text-gray-500\n\nValue: PND-2024-5847 → text-sm, text-black, font-medium\n\nLabel: User Since → same style\n\nValue: e.g. March 2025\n\nLabel: Total Invested → same style\n\nValue: e.g. EGP 12,600.00 (formatted with utility)\n\nDivider: optional line or spacing between sections\n\nBottom Section (Verification Progress):\n\nText:\n\nProgress: 1 / 5 steps complete\n\nStyle: text-sm, text-black\n\nNext Step Label:\n\nNext: Complete Profile Information\n\ntext-xs, text-gray-500, margin-top mt-1\n\nVerification Status Tag:\n\nIf complete:\n\nVerified\n\nStyle: border border-[#FF8A34] text-[#FF8A34] px-3 py-1 text-xs rounded-full\n\nIf not complete:\n\nNot Verified\n\nStyle: bg-gray-100 text-gray-500 px-3 py-1 text-xs rounded-full\n\nCTA Button:\n\nLabel: Complete Profile Now\n\nFull width, solid orange background\n\nStyle: bg-[#FF8A34] text-white py-2 px-4 rounded-lg mt-3 text-sm font-medium\n\n✅ Data & Logic\nts\nCopy\nEdit\nconst user = {\n  userId: \"PND-2024-5847\",\n  createdAt: \"2025-03-14\",\n  totalInvested: 12600,\n  stepsCompleted: 1,\n  totalSteps: 5\n};\n\nconst isVerified = user.stepsCompleted === user.totalSteps;\n✅ Acceptance Criteria\n Card appears in Profile tab after the header\n\n Displays user ID, join date, and total investment clearly\n\n Progress is shown as 1 / 5 steps complete (no % bar)\n\n If incomplete, status is Not Verified in grey\n\n If all steps completed, status is Verified in orange\n\n “Complete Profile Now” CTA triggers next onboarding step (mocked)\n\n Layout is fully mobile responsive, clean, and branded\n\n⏳ Priority\nHIGH — Combines identity, investment, and verification clarity in one critical profile component","createdAt":"2025-06-24T15:50:17Z","labels":[],"milestone":null,"number":25,"state":"CLOSED","title":"Feature  Build Unified Account Overview & Verification Status Card in Profile Tab","updatedAt":"2025-06-25T07:54:06Z","url":"https://github.com/hossaryp/beta/issues/25"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nThe Pend Beta app currently lacks a structured Profile tab header. Users need to immediately see their account identity and verification status. Without this, the profile experience feels disconnected and unclear, especially for users progressing through tiered verification.\n\n🎯 Objective\nCreate a top section in the Profile tab that displays:\n\nCircular profile image (placeholder for now)\n\nMasked mobile number\n\nA status tag:\n\nIf fully verified → Verified (solid orange border)\n\nIf not → Complete Your Profile (orange outline tag)\n\nThis component should be mobile-first and styled to Pend guidelines.\n\n🔍 Scope of Work\n✅ UI Layout\nContainer Style:\n\nWhite background\n\nPadding: px-4 pt-6 pb-4\n\nUse flex flex-col items-center for vertical alignment\n\nProfile Picture:\n\nCircle avatar (w-16 h-16)\n\nrounded-full, border optional\n\nPlaceholder image for now (/assets/avatar.svg)\n\nMasked Mobile Number:\n\nFormat example: +20XXXXXXXXXX\n\nFont: text-sm, font-medium, text-black\n\nPlaced just below the profile image\n\nStatus Tag (Dynamic):\n\nIf verified:\n\nText: Verified\n\nStyle: px-3 py-1 text-xs border border-[#FF8A34] text-[#FF8A34] rounded-full\n\nIf not verified:\n\nText: Complete Your Profile\n\nStyle: px-3 py-1 text-xs border border-dashed border-[#FF8A34] text-[#FF8A34] rounded-full\n\nMargin between elements: gap-2, center aligned\n\n✅ State & Logic\nUse a local boolean or status string:\n\nts\nCopy\nEdit\nconst isVerified = true; // or false\nconst maskedPhone = \"+2010XXXXXXXX\";\nTag switches conditionally based on isVerified\n\n✅ Acceptance Criteria\n Circular profile image appears at the top of Profile tab\n\n Mobile number is masked and displayed in readable font\n\n If verified, a solid orange Verified tag appears\n\n If incomplete, a dashed orange Complete Your Profile tag appears\n\n All elements follow spacing, sizing, and branding rules\n\n No navigation or editing needed at this step\n\n⏳ Priority\nHIGH — Required for onboarding flow clarity and identity display\n","createdAt":"2025-06-24T15:48:24Z","labels":[],"milestone":null,"number":24,"state":"CLOSED","title":"Feature: Build Profile Header with Verification Tag Logic","updatedAt":"2025-06-24T16:48:52Z","url":"https://github.com/hossaryp/beta/issues/24"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nUsers need visibility into their most recent actions — investments, redemptions, or pending transactions — to build trust and give feedback on platform interactions. Currently, there is no activity log in the Your Investments tab, leaving users unaware of what actions have been executed or are in progress.\n\n🎯 Objective\nDisplay a clean, mobile-friendly activity feed showing the user's 4 most recent transactions. Each entry should clearly state the action, amount, timestamp, and transaction status using visual tags.\n\n🔍 Scope of Work\n✅ Section Header\nTitle: Recent Activity\n\nStyle: text-sm, font-semibold, text-black\n\nPadding: px-4, mt-6, mb-2\n\n✅ Activity Item Layout (List Item)\nEach item should include:\n\nAction Text:\n\nExamples:\n\nInvested in Gold Reserve\n\nSold Date Farm\n\nStyle: text-sm, font-medium, text-black\n\nAmount + Timestamp:\n\nE.g. EGP 1,500 — Jun 20, 11:08 AM\n\nStyle: text-xs, text-gray-500\n\nStatus Tag:\n\nRight-aligned pill tag\n\nText:\n\nSuccessful\n\nPending\n\nRejected\n\nStyling:\n\nBase: text-xs, px-2 py-1, rounded-full\n\nBackground color varies by status:\n\nSuccessful: neutral gray\n\nPending: soft orange\n\nRejected: light gray\n\nCard/List Style:\n\nUse vertical list with spacing between items (gap-3, mb-1)\n\nOptional Card wrapping each row, or border-bottom\n\n✅ Mock Data Format\nts\nCopy\nEdit\nconst activity = [\n  {\n    id: 1,\n    action: \"Invested in Gold Reserve\",\n    amount: \"EGP 3,600\",\n    time: \"Jun 24, 10:03 AM\",\n    status: \"Successful\"\n  },\n  {\n    id: 2,\n    action: \"Sold Date Farm\",\n    amount: \"EGP 1,500\",\n    time: \"Jun 20, 2:48 PM\",\n    status: \"Successful\"\n  },\n  {\n    id: 3,\n    action: \"Invested in Olive Trees\",\n    amount: \"EGP 7,500\",\n    time: \"Jun 18, 9:12 AM\",\n    status: \"Pending\"\n  },\n  {\n    id: 4,\n    action: \"Redemption of Gold Reserve\",\n    amount: \"EGP 1,200\",\n    time: \"Jun 17, 6:01 PM\",\n    status: \"Rejected\"\n  }\n]\n✅ Acceptance Criteria\n Section titled “Recent Activity” below the Portfolio Allocation component\n\n 4 most recent actions shown in clean list format\n\n Each item displays action, amount, time, and status\n\n Status tags styled with appropriate colors and shape\n\n List is fully responsive and styled with proper spacing\n\n No extra features like filters, scroll, or action buttons\n\n⏳ Priority\nHIGH — Core part of investment feedback loop and user trust\n\n![Image](https://github.com/user-attachments/assets/7f875435-aaaa-4149-9e39-2bbb4bd00a8f)","createdAt":"2025-06-24T15:36:53Z","labels":[],"milestone":null,"number":23,"state":"OPEN","title":"Feature: Implement Recent Activity Feed","updatedAt":"2025-06-24T15:36:53Z","url":"https://github.com/hossaryp/beta/issues/23"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nPend Beta users need a simple visual that shows how their portfolio is divided across different assets. A circular chart may not be optimal for mobile screens. A clean, stacked horizontal progress bar offers a more compact, readable alternative while keeping the design lightweight.\n\n🎯 Objective\ncreate a horizontal stacked progress bar that visually represents the user’s portfolio allocation by asset. Each segment corresponds to an asset and its share in the total investment amount.\n\n🔍 Scope of Work\n✅ UI Layout\nSection Title:\n\nText: \"Portfolio Allocation\"\n\nStyle: text-sm, font-semibold, text-black, margin-bottom mb-2\n\nProgress Bar Container:\n\nw-full, h-4, rounded-full, overflow-hidden\n\nbg-[#F3F4F6] as background bar\n\nInner Segments:\n\nRendered as divs with:\n\nflex-grow based on percentage\n\nInline style={{ width: \"60%\" }} etc.\n\nDistinct background color per asset (assigned from config)\n\nNo borders\n\nLegend Below Bar:\n\nRow of:\n\nSmall colored dot\n\nAsset name\n\nPercentage (e.g. “Olive Trees – 60%”)\n\nSpacing: mt-3, gap-3, px-4\n\n✅ Example Asset Allocation Data\nts\nCopy\nEdit\nconst allocation = [\n  { name: \"Olive Trees\", percent: 60, color: \"#FF8A34\" },\n  { name: \"Gold Reserve\", percent: 28, color: \"#D1D5DB\" },\n  { name: \"Date Farm\", percent: 12, color: \"#E5E7EB\" }\n];\n✅ Functional Notes\nUse a component called <PortfolioProgressBar />\n\nAccepts props: data: Allocation[]\n\nUses map() to render dynamic widths\n\nNo animation required\n\nText does not overlap with the bar\n\n✅ Acceptance Criteria\n Portfolio Allocation section is titled and styled properly\n\n Horizontal bar reflects asset split by percentage\n\n Segments accurately sized by percent\n\n Color legend below the bar with asset names and share\n\n Fully responsive on all screen sizes\n\n Aligned with Pend brand design and typography\n\n⏳ Priority\nMEDIUM-HIGH — Important for investment clarity, but follows core value and asset interaction features\n\n![Image](https://github.com/user-attachments/assets/5cb20645-a5f4-46f8-80d4-2f11ff5b1138)\n\n","createdAt":"2025-06-24T15:35:24Z","labels":[],"milestone":null,"number":22,"state":"OPEN","title":"Feature: Implement Portfolio Allocation Using Horizontal Progress Bars","updatedAt":"2025-06-24T15:35:24Z","url":"https://github.com/hossaryp/beta/issues/22"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nCurrently, users can see their asset holdings at a glance but cannot view deeper insights into each investment. This limits understanding of performance and restricts user actions. A personalized detail view is needed — similar to the Explore tab but focused on \"your investment\" (e.g. invested amount, date, returns, actions).\n\n🎯 Objective\nEnhance the Asset Holdings List so each card is clickable. On click, users are routed to a new Asset Detail Page that shows:\n\nOverview of the asset (title, image, description)\n\nPersonal investment summary (money invested, % return, EGP return, date)\n\nAction buttons: Sell and Buy More\n\n🔍 Scope of Work\n✅ UI Requirements: Asset Holdings List\nSame horizontal layout as before\n\nEach asset row is clickable\n\nOn click → route to /portfolio/:assetId\n\nUse useNavigate from React Router\n\n✅ New Route: /portfolio/:assetId\nExample: /portfolio/olive-trees\n\n🖼 Asset Detail Page Layout\n📌 Top Section\nAsset Image (wide banner or square thumbnail)\n\nAsset Name (e.g. Olive Trees)\n\nShort description (can be mock for now)\n\n📊 Investment Summary Box\nStyled Card (bg-[#FFF8F4], rounded-xl, px-4 py-3):\n\nInvested Amount: EGP 7,500\n\ntext-base, font-bold, text-black\n\nReturn in EGP: +EGP 1,875\n\ntext-sm, text-[#FF8A34]\n\nROI %: +25%\n\ntext-sm, same color\n\nInvestment Date: Jun 1, 2025\n\ntext-xs, text-gray-500\n\n🧾 Asset Overview Section (like Explore tab)\nLocation (optional)\n\nAsset type: Agriculture, etc.\n\nDescription or summary of the asset\n\nLegal/custody info (mocked or skipped)\n\n🟧 CTA Section\nTwo buttons:\n\nSell (outlined orange button)\n\nBuy More (filled orange button)\n\nLayout: flex, gap-2, full width on mobile\n\n✅ Data Handling\nUse useParams to fetch assetId\n\nMap to mock investment data based on ID\n\nMock return data per asset:\n\nts\nCopy\nEdit\n{\n  id: 'olive-trees',\n  invested: 7500,\n  returnEGP: 1875,\n  returnPercent: 25,\n  date: '2025-06-01',\n  name: 'Olive Trees',\n  image: '/assets/olive.png',\n  description: 'A long-term sustainable agricultural investment...'\n}\n✅ Acceptance Criteria\n Asset holding cards are clickable\n\n Clicking navigates to /portfolio/:assetId\n\n Detail page displays personal investment summary (EGP + % return)\n\n Includes investment date and action CTAs\n\n Styled to Pend guidelines (white bg, orange accent, rounded)\n\n No unnecessary sections like ROI model or documents — only personal info and overview\n\n Fully mobile responsive\n\n⏳ Priority\nHIGH — Key for transparency and user interaction with their real asset investments\n\n![Image](https://github.com/user-attachments/assets/6faea861-c5aa-4247-a20d-aaa232c196fd)\n","createdAt":"2025-06-24T15:31:35Z","labels":[],"milestone":null,"number":21,"state":"OPEN","title":"Feature: Build Clickable Asset Holdings List with Personalized Asset Detail View","updatedAt":"2025-06-24T15:31:35Z","url":"https://github.com/hossaryp/beta/issues/21"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nUsers currently cannot view the detailed breakdown of which assets they own in the Your Investments screen. A clear list of asset holdings with value, performance, and an action button is essential for transparency, control, and trust in the platform.\n\n🎯 Objective\nCreate a scrollable list of horizontal asset cards, each displaying:\n\nAsset name\n\nThumbnail image\n\nCurrent value in EGP\n\nROI % (positive or negative)\n\n\"Sell\" action button on the right\n\nCards must follow Pend’s visual standards and support interactive \"Sell\" behavior (simulated for now).\n\n🔍 Scope of Work\n✅ UI Requirements (for each card)\nLayout:\n\nHorizontal row\n\nSpacing: gap-3, padding px-4 py-2\n\nCard: bg-white, rounded-xl, shadow-sm, full-width\n\nLeft: Thumbnail Image\n\nSize: w-14 h-14 (56x56px)\n\nShape: rounded-lg\n\nUse local assets or placeholders for:\n\nOlive Trees\n\nGold Reserve\n\nDate Farm\n\nCenter Column:\n\nName: e.g. “Olive Trees”\n\nStyle: text-sm, font-semibold, text-black\n\nValue: e.g. “EGP 7,500”\n\nStyle: text-sm, text-black\n\nReturn: e.g. “+25%” or “-1.2%”\n\nStyle:\n\nIf positive: text-[#FF8A34]\n\nIf negative: text-gray-500\n\nRight: Sell Button\n\nText: Sell\n\nStyle: text-[#FF8A34], border, border-[#FF8A34], text-xs, rounded-md, px-3 py-1\n\nButton height matches vertical center of card\n\n✅ Asset Data (mock array)\nts\nCopy\nEdit\n[\n  {\n    id: 1,\n    name: \"Olive Trees\",\n    value: \"EGP 7,500\",\n    return: \"+25%\",\n    image: \"/assets/olive.png\"\n  },\n  {\n    id: 2,\n    name: \"Gold Reserve\",\n    value: \"EGP 3,600\",\n    return: \"-1.2%\",\n    image: \"/assets/gold.png\"\n  },\n  {\n    id: 3,\n    name: \"Date Farm\",\n    value: \"EGP 1,500\",\n    return: \"+3.7%\",\n    image: \"/assets/date.png\"\n  }\n]\n✅ Interaction\nClicking “Sell” should simulate a confirmation handler (e.g. open modal or log to console)\n\nNo filters or additional actions at this stage\n\n✅ Acceptance Criteria\n List of 3 assets appears below the Investment Value card\n\n Each asset card matches spacing, font, and style guide\n\n ROI color logic applied correctly (orange if +, gray if –)\n\n Sell button is clickable and styled with orange outline\n\n Layout is fully mobile-responsive with consistent spacing\n\n Cards use local image assets (placeholder okay)\n\n⏳ Priority\nHIGH — Essential for user transparency and interaction with their holdings\n\n![Image](https://github.com/user-attachments/assets/a7a2ddb3-a27a-4b04-9f6a-80ce23bd9d4a)","createdAt":"2025-06-24T15:30:01Z","labels":[],"milestone":null,"number":20,"state":"OPEN","title":"Feature: Build Asset Holdings List with Sell Button","updatedAt":"2025-06-24T15:30:01Z","url":"https://github.com/hossaryp/beta/issues/20"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nUsers currently have no way to hide their total investment value from others around them. In public or shared environments, privacy is important. The investment summary card should include an option to toggle between showing and hiding the EGP amount and return.\n\n🎯 Objective\nBuild a summary card that displays the user's total investment value, return, and last updated timestamp. Add an eye icon that lets the user toggle visibility of their investment amounts. Default state is visible.\n\n🔍 Scope of Work\n✅ UI Requirements\nCard Title Row:\n\nText: \"Your Investment Value\"\n\nRight-aligned eye icon (eye / eye-off, from lucide-react or similar)\n\nIcon clickable to toggle value visibility\n\nCard Content (Visible State):\n\nValue: EGP 12,600.00\n\ntext-2xl, font-bold, text-black\n\nReturn: +EGP 1,250\n\ntext-sm, text-[#FF8A34]\n\nTimestamp: Last Updated: Jun 23, 2025\n\ntext-xs, text-gray-500\n\nCard Content (Hidden State):\n\nValue: •••••••••\n\nReturn: hidden or —\n\nTimestamp still visible\n\nCard Style:\n\nBackground: bg-[#FFF8F4]\n\nPadding: px-4 py-3\n\nBorder radius: rounded-xl\n\nShadow: shadow-sm\n\n✅ State & Behavior\nReact useState to manage isVisible toggle\n\nDefault: true\n\nOn icon click:\n\nToggle isVisible\n\nChange icon accordingly (eye ↔ eye-off)\n\n✅ Acceptance Criteria\n Card appears on top of the Your Investments screen\n\n Eye icon is aligned right in the title row\n\n Clicking eye toggles visibility of value and return\n\n Hidden state shows dots (•••••••••) for value\n\n Timestamp remains visible in both states\n\n Fully responsive and styled according to Pend guidelines\n\n No use of emojis, green/red, or off-brand colors\n\n⏳ Priority\nHIGH — Required for user privacy and mobile usability in public spaces\n\n![Image](https://github.com/user-attachments/assets/f31edc7a-c04e-4925-8fe1-db7cc5f3040f)\n\n","createdAt":"2025-06-24T15:23:14Z","labels":[],"milestone":null,"number":19,"state":"CLOSED","title":"Feature  Create \"Your portfolio \" Summary Card","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/19"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"🧠 Problem Summary\nThe current Pend Beta mobile app lacks a consistent global header. Users need a unified top bar across all screens that displays the app identity and provides access to real-time notifications. Without this, the app lacks cohesion and users miss important updates about their activity.\n\n🎯 Objective\nBuild a global, mobile-first header component used across the Pend app. It should include:\n\nCentered branding (pend, lowercase)\n\nRight-aligned notification bell\n\nOn-click: Opens modal with recent alerts\n\nFully responsive, no layout overlap or scroll bugs\n\n🔍 Scope of Work\n✅ UI Requirements\nLayout:\n\nFixed or sticky to top (depending on screen design)\n\nFull-width container, white background\n\nPadding: px-4 py-2, rounded-none\n\nShadow: shadow-sm\n\nBranding:\n\nCentered: pend\n\nStyle: lowercase, font-bold, font-[Poppins], text-black, text-lg\n\nNotification Icon:\n\nRight-aligned bell icon (use lucide-react or heroicons)\n\nClick toggles dropdown/modal\n\n✅ Notification Modal\nWhite rounded-xl card or floating modal\n\nMax height ~300px, scrollable if overflow\n\nShadow: shadow-lg, z-index above main content\n\nEach notification item:\n\nTitle (bold, black)\n\nTimestamp (text-xs, gray-500)\n\nOptional status tag (e.g. ✅, ❗ — or simple styled dots if no emojis)\n\n\"Clear All\" button:\n\nSmall, text-[#FF8A34], aligned right\n\nOn click: clears notification list (in-memory)\n\n✅ Example Notification List (initial mock state)\nts\nCopy\nEdit\n[\n  {\n    id: 1,\n    type: \"success\",\n    message: \"You successfully purchased Gold Reserve\",\n    timestamp: \"Jun 24, 10:03 AM\"\n  },\n  {\n    id: 2,\n    type: \"success\",\n    message: \"You sold Date Farm\",\n    timestamp: \"Jun 20, 2:48 PM\"\n  },\n  {\n    id: 3,\n    type: \"pending\",\n    message: \"Your investment in Olive Trees is pending\",\n    timestamp: \"Jun 18, 9:12 AM\"\n  }\n]\n✅ Acceptance Criteria\n Global header appears on all screens and is consistent\n\n pend text is centered and styled according to brand\n\n Bell icon opens notification modal\n\n Modal displays 3 sample alerts, styled with spacing and timestamp\n\n \"Clear All\" button clears alerts and collapses modal if needed\n\n Uses Tailwind for layout and styling (rounded-xl, shadow-sm, etc.)\n\n No emojis used — status conveyed by color, icon, or bold\n\n Responsive on mobile screens (min width: 360px)\n\n⏳ Priority\nHIGH — Core to global layout, brand consistency, and user feedback UX","createdAt":"2025-06-24T15:18:25Z","labels":[],"milestone":null,"number":18,"state":"CLOSED","title":"Feature: Implement Global Header with Notification Modal for Pend Beta App","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/18"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nThe app currently lacks a centralized Settings section, limiting user control over their experience, preferences, and account-level actions like logout or language change.\n\n🎯 Objective\nDesign and implement a Settings screen (or section within Profile) that provides users with control over preferences, app behavior, and session management.\n\n🧩 Settings Options to Include\n\n🔐 Account\nView Mobile Number (read-only)\n\nChange PIN (optional, if PIN is supported)\n\n🌐 Preferences\nLanguage Selector: Dropdown (e.g. Arabic, English)\n\nCurrency Display: Dropdown (EGP / USD)\n\n🔔 Notifications\nToggle: Receive App Alerts (on/off)\n\nToggle: Investment Updates (on/off)\n\n📱 App Info\nDisplay App Version (static, e.g. v0.62)\n\nAbout Pend (opens About screen or modal with company/legal info)\n\nLogout button (clears session)\n\n📍 Placement\n\nAccessed from Profile screen via gear icon\n\n🎨 Styling\n\nMobile-first layout\n\nPoppins font\n\nWhite background, black text (#000000)\n\nOrange toggles and CTA buttons (#FF8A34)\n\nUse cards or list rows with icons + right arrows\n\n✅ Acceptance Criteria\n\nEach settings group is visible and accessible\n\nToggles and selectors work (simulate state)\n\nLogout clears session and redirects to login\n\nLanguage and currency options update state (no backend required yet)\n\n⏳ Priority: MEDIUM\nEnables better user control, trust, and flexibility across different regions and use cases.","createdAt":"2025-06-23T13:11:28Z","labels":[],"milestone":null,"number":17,"state":"CLOSED","title":"Feature Add Structured Settings Section","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/17"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nUsers currently don’t have a visible way to get help or report problems. This creates friction during critical flows like deposits and tier upgrades.\n\n🎯 Objective\nCreate a Support section that gives users instant help through WhatsApp chat, allows them to report problems, and optionally provides FAQ content for common questions.\n\n🧩 Support Options to Include\n📘 Help Topics / FAQ (at first)\nStatic answers to common questions:\n\nHow do I deposit?\n\nHow do I upgrade my tier?\n\nWhy is my deposit pending?\n\n💬 Chat with Support\nButton label: Chat with Support\n\nOpens: WhatsApp chat link to Pend’s official support line\n\nSubtitle: “Need help? Talk to our team instantly”\n\n📎 Report a Problem\nButton label: Report a Problem\n\nOpens a simple form with:\n\nDropdown: Select issue type (Deposit, Tier, Access, Other)\n\nText field: Let the user describe the problem\n\nSubmit: Orange button (#FF8A34) — simulate send\n\n\n📍 Placement\n\ninclude it in the Settings screen under a new \"Support\" category\n\n🎨 Styling Guidelines\n\nWhite background\n\nText color: #000000\n\nCTA buttons and active elements: #FF8A34\n\nFont: Poppins\n\nMobile-first, clean layout\n\n✅ Acceptance Criteria\n\nSupport section is clearly visible and accessible\n\nWhatsApp button opens correctly\n\nIssue report form functions visually (no backend needed yet)\n\nHelp Topics shown as plain text (optional, if included)\n\nNo email support shown anywhere in UI\n\n⏳ Priority: HIGH\nEssential for reducing friction, increasing trust, and resolving user confusion in key flows like identity and deposits.","createdAt":"2025-06-23T13:07:38Z","labels":[],"milestone":null,"number":16,"state":"OPEN","title":"Feature Add Support Access for Users","updatedAt":"2025-06-23T13:07:38Z","url":"https://github.com/hossaryp/beta/issues/16"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/61b645d0-ddb8-4aa0-9584-706d77902372)\n\n📌 Problem Summary\nThe current Profile screen shows tier status and basic account info but lacks interactive upgrade logic, tier step clarity, and contextual UX for users navigating their verification journey.\n\n🎯 Objective\nEnhance the Profile tab to clearly communicate the user’s current verification tier, show meaningful tier progress, and guide users toward the next action required for upgrade. Optional personal info should remain collapsed unless opened.\n\n🧩 Scope and Required Fixes\n\nTier Progress Section\n\n🔧 Issue: Current tier is shown but no clarity on completed vs. pending steps.\n\n✅ Fix: Add a multi-step visual progress bar showing all 5 tiers (Mobile → Biometric → KYC → Device → Location).\n\nCurrent tier in orange (#FF8A34)\n\nCompleted steps: gray\n\nUpcoming: light gray\n\nShow tier name under each point (use short labels)\n\nNext Action CTA\n\n🔧 Issue: “Fully Verified” button is inactive even when user has completed Tier 5.\n\n✅ Fix: Make the button dynamic.\n\nIf not fully verified → label shows next tier name\n\nIf Tier 5 is reached → change label to: Verification Complete and disable\n\nAccount Overview\n\n✅ Keep fields: User ID, User Since, Total Invested\n\nConsider adding tier benefits info tooltip (optional)\n\nAdd Personal Info\n\n🔧 Issue: Dropdown lacks visibility or prompt\n\n✅ Fix: Add a subtitle or icon next to “Add Personal Info” to prompt user (optional)\n\n✅ Acceptance Criteria\n\nProfile displays user tier and investment details clearly\n\nProgress bar shows all 5 verification steps visually\n\nUpgrade button dynamically guides user to the next verification step\n\nPersonal info section is collapsed by default and optional\n\nAll labels and UI components follow Pend brand style (white background, Poppins font, orange accent)\n\n⏳ Priority: HIGH\nThis screen is the central reference for identity and progress — essential for user trust, compliance clarity, and onboarding experience.","createdAt":"2025-06-23T11:49:57Z","labels":[],"milestone":null,"number":15,"state":"CLOSED","title":"Profile Screen – Tier Display, Verification Progress, and Personal Info Access","updatedAt":"2025-06-30T17:58:13Z","url":"https://github.com/hossaryp/beta/issues/15"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nThe Hub screen currently lacks quick access to the user’s profile identity and verification tier. This makes it harder for users to know their current status and navigate to their full profile.\n\n🎯 Objective\nAdd a Profile Card component at the top of the Hub screen to display key user identity info (ID, username, tier) and allow quick access to the full Profile view.\n\n🧩 Card Requirements\n\n1. Display Fields:\n\nUser ID (e.g., PND-2024-5847) or (e.g., User–04421)\n\nTier Badge (e.g., Tier 1) with orange styling (#FF8A34)\n\nprofile icon placeholder\n\n2. Interaction:\n\nEntire card is clickable\n\nNavigates to full Profile screen\n\n3. Styling:\n\nCard with soft shadow and rounded corners\n\nWhite background (#FFFFFF)\n\nUse Poppins font\n\nMaintain spacing consistency with rest of Hub components\n\n4. Placement:\n\nInsert above the first section in the Hub screen layout\n\n✅ Acceptance Criteria\n\nProfile Card is visible at the top of the Hub\n\nShows User ID, Tier, and Username properly\n\nClicking the card takes user to Profile screen\n\nStyle fully matches Pend visual system\n\n⏳ Priority: HIGH\nIt’s the first interaction point for the user inside the app and sets the tone for identity-aware navigation.","createdAt":"2025-06-23T11:48:03Z","labels":[],"milestone":null,"number":14,"state":"CLOSED","title":"Feature Add Profile Card to Top of Hub Screen","updatedAt":"2025-06-30T15:50:16Z","url":"https://github.com/hossaryp/beta/issues/14"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nCurrent tier progression lacks a clear structure and does not enforce sequential identity verification. A consistent upgrade flow with proper UI and action requirements is needed to improve compliance, security, and UX.\n\n🎯 Objective\nImplement a modal-based, sequential Tier Upgrade Flow starting from mobile verification and ending with location access. Each tier should unlock only after the previous one is completed, with actions based on device capabilities.\n\n🧩 Tier Structure & Required Actions\n\nTier 1 – Mobile Verification\n\nAction: Enter mobile number + receive OTP\n\nResult: Create wallet and link identity hash\n\n✅ Current tier for most users\n\nTier 2 – Biometric Verification\n\nAction: Prompt to enable Face ID or fingerprint authentication\n\nResult: Bind biometric trust layer to user account\n\nPurpose: Add security for device-based login and account recovery\n\nTier 3 – KYC Verification\n\nAction: Upload national ID (front + back)\n\nResult: Full user KYC for regulated pools and large investments\n\nTier 4 – Device Verification\n\nAction: Toggle to allow device identity binding (e.g. device ID or secure element)\n\nPurpose: Prevent fraud, restrict access to trusted devices\n\nTier 5 – Location Verification\n\nAction: Toggle to allow GPS or telecom location access\n\nResult: Unlock geo-specific pools based on user location\n\nPurpose: Enforce regional regulations\n\n✅ Acceptance Criteria\n\nProgress bar clearly displays current and locked tiers\n\n\"Upgrade Tier\" button opens modal with only next required step\n\nModals use device capabilities where possible (biometric, GPS, etc.)\n\nFile inputs for ID upload where needed\n\nCannot skip or jump tiers\n\nAfter each step, user tier is updated in UI and stored (simulate with state)\n\n⏳ Priority: HIGH\nEssential for compliant onboarding, fraud prevention, and feature access control.\n\n","createdAt":"2025-06-23T11:42:48Z","labels":[],"milestone":null,"number":13,"state":"CLOSED","title":"Feature Tier Upgrade Flow – Mobile to Location Verification","updatedAt":"2025-06-30T15:50:04Z","url":"https://github.com/hossaryp/beta/issues/13"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nWhen a user initiates a deposit, the system currently lacks a structured way to track the full deposit lifecycle — from initiation to approval or failure. Without proper logging and status visibility, users can't verify their deposit state or trust the minting logic.\n\n🎯 Objective\nImplement a complete deposit request system with status tracking and user-facing history, tied to backend approval logic and minting events.\n\n🧩 Scope\n\nDeposit Request Handling\n\nWhen user initiates a deposit:\n\nCreate a deposit request object with:\n\namount\n\npaymentMethod (from selected method)\n\nstatus: pending\n\ntimestamp\n\nuserIdentityHash\n\nStatus Lifecycle\n\nBackend updates the status based on verification:\n\napproved: Trigger EGP stablecoin minting\n\nfailed: Do not mint, initiate refund by method rules\n\nMinting\n\nMint only happens after backend sets status = approved\n\nLog minting event with reference to deposit ID\n\nUser Interface\n\nDeposit history view shows:\n\nList of past deposit requests\n\nMethod used\n\nStatus (pending, approved, failed)\n\nDate/time\n\nExplorer Logging\n\nStatus updates and deposit metadata should be logged on-chain or via the internal explorer/API\n\n✅ Acceptance Criteria\n\nDeposit requests are created on every user deposit\n\nStatus updates are tracked and reflected in the UI\n\nMinting only happens after approved status\n\nUser sees a complete deposit history with status and timestamps\n\nFailed deposits are handled gracefully\n\n⏳ Priority\nHIGH – Essential for trust, fund traceability, and stablecoin issuance control","createdAt":"2025-06-22T14:00:06Z","labels":[],"milestone":null,"number":12,"state":"CLOSED","title":"Feature Deposit Request Creation and Status Tracking","updatedAt":"2025-06-22T19:03:01Z","url":"https://github.com/hossaryp/beta/issues/12"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nNew users must not proceed with onboarding or wallet creation without legally accepting Pend’s Terms and Agreement. Currently, there's no enforced pre-consent step before OTP. This poses a compliance risk and lacks a clear audit trail.\n\n🎯 Objective\nIntroduce a mandatory terms acceptance step before sending the OTP, and trigger identity + wallet creation only after successful OTP verification.\n\n🧩 Scope\n\nUI/UX Update\n\nOn entering a mobile number:\n\nShow Terms and Agreement checkbox:\n\nLabel: “I agree to Pend’s Terms and Conditions”\n\nLink to full document (modal or external)\n\nDisable OTP submission unless checkbox is checked\n\nOTP Verification Logic\n\nAfter checkbox is accepted and OTP is successfully entered:\n\nGenerate a unique identity hash\n\nCreate a wallet linked to that identity\n\nStore:\n\nmobileNumber\n\nidentityHash\n\nwalletAddress\n\nSystem Constraints\n\nOnly one identity per mobile number\n\nIdentity hash stored on backend, not on-chain\n\n✅ Acceptance Criteria\n\nUsers cannot receive OTP unless they accept terms\n\nOTP is only sent after consent\n\nWallet + identity are created only after valid OTP\n\nConsent is logged for legal tracking\n\nRepeat logins skip this step\n\n⏳ Priority\nHIGH – Required for legal compliance, wallet issuance, and onboarding integrity\n\n","createdAt":"2025-06-22T13:57:33Z","labels":[],"milestone":null,"number":11,"state":"CLOSED","title":"Feature First-Time Sign-Up with Terms Consent and Wallet Creation","updatedAt":"2025-06-30T15:46:58Z","url":"https://github.com/hossaryp/beta/issues/11"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nCurrently, users exploring investment pools (e.g. Harvest Fund) have direct, in-app access to legal documents such as SPV registration, redemption terms, or fund structure. \n\n🎯 Objective\nAllow users to access downloadable legal documents (PDFs) directly within each pool’s detail view — clearly labeled, secure, and accessible.\n\n🧩 Scope\n\nUI/UX Update\n\nIn the Pool Detail View, add a new section:\n\nTitle: Documents\n\nTwo categories:\n\nLegal Documents (e.g., SPV registration, fund structure)\n\nBusiness Documents (e.g., feasibility study, investment overview)\n\nEach document:\n\nDisplay a PDF icon in Pend orange (#FF8A34)\n\nClearly labeled (e.g., SPV_Registration.pdf)\n\nInclude a download or open link\n\nBackend Integration\n\nDocuments should be securely served from the backend\n\nUse a safe, access-controlled download endpoint\n\n✅ Acceptance Criteria\n\n“Documents” section appears in pool detail screen\n\nPDFs are categorized and styled with icons\n\nClicking opens or downloads the file in-browser\n\nFiles must open correctly on both mobile and desktop\n\n⏳ Priority\nHIGH – builds user trust, supports due diligence, and ensures regulatory clarity","createdAt":"2025-06-22T13:35:56Z","labels":[],"milestone":null,"number":10,"state":"OPEN","title":"Feature Downloadable Legal Documents in Pools","updatedAt":"2025-06-22T13:35:56Z","url":"https://github.com/hossaryp/beta/issues/10"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nAfter an investment is confirmed, users must receive immediate and clear confirmation. Additionally, once they’ve accepted the terms and agreement checkbox, they are considered legally approved to proceed. However, the current UX lacks strong visibility into what happens next and where to see the updated investment.\n\n🎯 Objective\nRedirect users to the Wallet tab after a successful investment, where they can view their contribution. Ensure the system logs the transaction and reflects it clearly in the transaction history.\n\n🧩 Scope\n\nRedirect & Confirmation\n\nAfter successful investment:\n\nShow a visible success message (toast or full-screen banner)\n\nAutomatically redirect to /wallet\n\nLogging & History\n\nAdd a new entry to the transaction history\n\nInclude:\n\nPool name\n\nAmount invested\n\nCurrency\n\nTimestamp\n\nStatus should default to \"Invested\"\n\nLegal Acknowledgment\n\nEnsure that once the user has checked the agreement box during investment, the platform recognizes them as legally approved\n\n✅ Acceptance Criteria\n\nInvestment success triggers redirect to Wallet\n\nWallet displays updated balance or holdings\n\nSuccess feedback is clear and instant\n\nTransaction is listed in history with accurate metadata\n\nNo further agreement prompts after consent is recorded\n\n⏳ Priority\nMEDIUM – critical for clarity, retention, and legal audit trail\n\n","createdAt":"2025-06-22T13:24:55Z","labels":[],"milestone":null,"number":9,"state":"CLOSED","title":"Feature Post-Investment Handling","updatedAt":"2025-06-24T10:43:35Z","url":"https://github.com/hossaryp/beta/issues/9"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nCurrently, users can attempt to invest without confirming whether their wallet balance is sufficient, which may lead to confusion and failed transactions.\n\n🎯 Objective\nPrevent investment attempts unless user has enough funds in wallet.\n\n🧩 Scope\n\nUI Logic\n\nOn amount input, compare with user balance\n\nIf balance is insufficient:\n\nShow message like “Insufficient Balance”\n\nDisable or block investment submission\n\n✅ Acceptance Criteria\n\nReal-time validation before clicking “Invest”\n\nError message for insufficient balance\n\nNo transaction sent if balance < amount\n\n⏳ Priority\nHIGH – essential for user experience and functional integrity","createdAt":"2025-06-22T13:06:11Z","labels":[],"milestone":null,"number":8,"state":"CLOSED","title":"Feature Balance Validation Before Investing","updatedAt":"2025-06-22T19:01:56Z","url":"https://github.com/hossaryp/beta/issues/8"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"📌 Problem Summary\nCurrently, users browsing investment pools don’t see identity tier requirements clearly, and can attempt to invest in pools they’re not eligible for. This causes friction, failed flows, and poor onboarding.\n\n🎯 Objective\nShow a clear visual tag for each pool’s identity tier (e.g. “OTP Only”, “Tier 1 Required”), and enforce access control based on the user’s current tier. If the user is not eligible, prompt them to upgrade or explore other pools.\n\n🧩 Scope\n\nUI/UX Update\n\nDisplay identity tier tags on pool cards:\n\n“OTP Only”\n\n“Tier 1 Required”\n\n“Tier 2 Required”\n\nStyle tags with neutral design to match brand guidelines\n\nEligibility Enforcement\n\nWhen a user clicks “Invest” on a restricted pool:\n\nIf their tier is insufficient:\n\nShow message: “Your current tier does not allow investment in this pool”\n\nCTA options:\n\n“Upgrade Your Tier” (if available)\n\n“Explore More Opportunities” (link to Explore tab)\n\nBackend & Metadata\n\nAdd minTierRequired field to pool metadata (if not already present)\n\nCompare user tier (from session/auth) with pool / assets requirement\n\n✅ Acceptance Criteria\n\nIdentity tier tags appear on every pool card (Pools + Explore tabs)\n\nUsers with insufficient tier:\n\nCannot proceed with investment\n\nAre shown prompt with upgrade or redirect options\n\nUsers with valid tier:\n\nProceed as normal\n\nSystem enforces logic across all investment entry points\n\n⏳ Priority\nHIGH – critical for user guidance, legal compliance, and gated asset access","createdAt":"2025-06-22T13:03:51Z","labels":[],"milestone":null,"number":7,"state":"CLOSED","title":"Feature Pool Listing with Identity Tier Labels and Access Control","updatedAt":"2025-06-22T19:00:49Z","url":"https://github.com/hossaryp/beta/issues/7"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"📌 Problem Summary\nCurrently, when a user clicks \"Deposit EGP\", the flow proceeds without allowing the user to choose a payment method. This limits flexibility, causes confusion, and doesn’t reflect backend integrations (Coinbase, Binance, Bank Transfer, etc.).\n\n🎯 Objective\nIntroduce a payment options screen after selecting \"Deposit EGP\", allowing the user to choose between available funding methods.\n\n🧩 Scope\n1. Payment Method Selection UI\nAfter user clicks \"Deposit EGP\":\n\nShow a modal or full-screen with the following options:\n\n🏦 Bank Transfer\n\n🍏 Apple Pay\n\n🤖 Google Pay\n\n🌐 Coinbase\n\n🟡 Binance Pay\n\n(future) 💳 Card Payment\n\nmobile walleyt (if possible) \n\nEach option should be a selectable card/button with logo and description\n\n2. Option-Specific Handling\nClicking on a payment method should:\n\nTrigger the appropriate backend flow (e.g., generate transfer reference, redirect to Coinbase, etc.)\n\nStore selected method in transaction metadata\n\nwhen payment is confiremed proceed to back end minting flow\n\n3. Metadata Logging\nInclude paymentMethod in deposit logs and explorer:\n\nj\n✅ Acceptance Criteria\n Payment method selection screen shown after \"Deposit EGP\"\n\n User cannot skip selection step\n\n Each option routes to the correct handler\n\n Transaction includes selected paymentMethod\n\n Logged on-chain and in Explorer/API\n\n⏳ Priority\nHIGH – improves UX, ensures integration alignment, and prepares for fiat onboarding scale\n\n","createdAt":"2025-06-19T13:02:12Z","labels":[],"milestone":null,"number":6,"state":"CLOSED","title":"Feature: Show Payment Options When Depositing EGP","updatedAt":"2025-06-22T10:05:56Z","url":"https://github.com/hossaryp/beta/issues/6"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Problem Summary\nCurrently, when a user clicks \"Invest\" in a pool (e.g., Harvest Pool), they are immediately prompted for consent (OTP or biometric). However, there is no prior step to review or approve the legal agreement (terms of investment, SPV ownership, redemption policy, etc.).\n\n Objective\nIntroduce a pre-consent agreement approval step in the investment flow. Users must review and accept a pool-specific contract/terms before proceeding to the consent phase.\n\n🧩 Scope\n1. UI/UX Update\nOn \"Invest\" click:\n\nDisplay modal or screen titled:\n“Investment Agreement – Powered by Dpend for Agri Investments”\n\nInclude:\n\nSummary of the agreement (editable in CMS or markdown file)\n\nLink to full legal PDF (optional)\n\nCheckbox: “I agree to the terms and conditions”\n\nOnly after checkbox is selected, the \"Continue\" button activates\n\n2. Consent Triggering\nOnce user agrees to the terms:\n\nThen trigger the existing consent step (OTP, biometric)\n\nStore both:\n\nagreementAccepted: true\n\nconsentHash for the action (e.g., harvest_invest)\n\n3. Audit Logging\nLog both agreement acceptance and consent in transaction log:\n\n\n✅ Acceptance Criteria\n Agreement modal shown before consent\n\n Checkbox must be ticked before continuing\n\n Consent action only triggered after agreement is accepted\n\n Agreement acceptance is logged as a separate transaction event\n\n No user can bypass agreement screen before investing\n\n⏳ Priority\nHIGH – critical for legal compliance, user clarity, and regulatory audit trail (especially under FRA and Reg S jurisdictions)\n\n","createdAt":"2025-06-19T12:50:29Z","labels":[],"milestone":null,"number":5,"state":"CLOSED","title":"Feature: Show Investment Agreement Before Consent for Pool Investment","updatedAt":"2025-06-22T09:49:37Z","url":"https://github.com/hossaryp/beta/issues/5"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Problem Summary\nIn the Wallets tab of the Pend Explorer, wallet balances are not showing correctly. Additionally, clicking on any wallet does not display the transaction history for that specific wallet.\n\nScope of the Bug\n\n- Wallet list view does not show:\n- Token balances (e.g., pEGP, HVT)\n- Phone metadata (if available)\n- Last activity or transaction count\n\nWallet detail view (when clicked) fails to:\n- Load associated transaction history\n- Show basic wallet metadata\n- Provide links to related actions (deposits, redemptions, consents)\n\n🔍 Expected Behavior\n\n- Wallet tab should list:\n- wallet address\n- pEGP balance\n- HVT balance\n- last active timestamp\n- transaction count\n\nWallet detail view should show:\n\n- Filtered list of transactions only for that wallet\n- Grouped by action (e.g., deposit, send, redeem, consent)\n- Expandable details (date, NAV, value, counterparties)\n\n\n\n\n✅ Acceptance Criteria\n\n-  Wallet list loads all balances and metadata correctly\n- Clicking a wallet shows its unique transaction history\n- Consent, investment, and transfer events all mapped and visible\n- Search or filter by address returns expected result\n\n🕐 Priority\nHIGH – impacts trust, usability, and debugging; blocks investor visibility into wallet activity\n\n","createdAt":"2025-06-19T08:40:26Z","labels":[],"milestone":null,"number":4,"state":"CLOSED","title":"Bug: Wallet Balances Not Displayed and Transactions Missing on Wallet Detail View","updatedAt":"2025-06-22T09:22:42Z","url":"https://github.com/hossaryp/beta/issues/4"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"New Feature: Log and Display Consent-Based Signature Events in UI, API, and Blockchain\n\nBackground\nEvery sensitive action in Pend (e.g., wallet creation, investment, redemption) currently requires user consent via OTP or biometric. This is validated on-chain through the ConsentManager contract. However, these consents are not yet displayed as signed transactions in the blockchain explorer, wallet activity log, or API responses.\n\nObjective\nIntroduce a unified \"consent signature transaction\" for every verified user action (wallet creation, deposit, KYC, etc.), linking it to user identity metadata (e.g., masked phone, biometric, location tier). This enhances auditability, trust, and user transparency.\n\nScope\n1. Consent as a Visible Transaction Type\nEach successful consent (e.g., wallet creation, pool deposit) should:\nEmit an on-chain ConsentVerified event\nBe recorded as a consent_signature transaction type in transaction logs\n\n2. Explorer Update\nShow consent transactions in Explorer UI as a new category\n\nDisplay:\n\nType (wallet creation, investment, etc.)\n\nIdentity (hashed or masked phone)\n\nConsent tier (e.g., biometric, phone OTP, geo-verified)\n\nTimestamp\n\nExample: “Wallet created with biometric + OTP (+20108****, Cairo, Egypt)”\n\n3. Wallet UI Enhancement\nIn TransactionList.tsx, show:\n\nConsent history (wallet creation, KYC upgrade, pool deposit consent)\n\nStyled tags: ✅ consented, 🔒 biometric, 📍 geo-tagged, 📱 phone\n\n4. API Enhancement\n\n✅ Acceptance Criteria\n On-chain consent logs emitted per action\n\n Consent transactions shown in Explorer and Wallet UI\n\n API reflects structured consent_signature type\n\n Consent actions are categorized and filterable by action type and user tier\n\n⏳ Priority\nHIGH — critical for transparency, trust, and audit compliance (FRA, GDPR, Reg S)\n\n","createdAt":"2025-06-19T08:31:28Z","labels":[],"milestone":null,"number":3,"state":"CLOSED","title":"New Feature: Log and Display Consent-Based Signature Events in UI, API, and Blockchain","updatedAt":"2025-06-22T09:22:17Z","url":"https://github.com/hossaryp/beta/issues/3"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/aa41cbae-81c9-42ee-94c4-2d8646c0df71) ","createdAt":"2025-06-18T13:39:55Z","labels":[],"milestone":null,"number":2,"state":"CLOSED","title":"Deposit button action","updatedAt":"2025-06-19T05:51:34Z","url":"https://github.com/hossaryp/beta/issues/2"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/db1af120-1413-4cfb-90dc-343df0081ab7)","createdAt":"2025-06-18T13:05:36Z","labels":[],"milestone":null,"number":1,"state":"CLOSED","title":"First time investment - wallet tab","updatedAt":"2025-06-19T08:31:47Z","url":"https://github.com/hossaryp/beta/issues/1"}]
