[{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nAllow users to upload identity documents in three separate steps ‚Äî front side, back side, and a live selfie ‚Äî as part of the KYC flow, in compliance with FRA‚Äôs digital identity verification standards.\n\n Acceptance Criteria\n Create a new screen component: DocumentUploadScreen.tsx\n\nBreak the document upload into 3 distinct steps/tabs:\nFront Side of ID\n  2- Title: \"Upload the front of your ID\"\n  3- Image picker for gallery or camera\n  4- Show preview after selection\n  5- Require confirmation before proceeding\nBack Side of ID\n  1- Title: \"Upload the back of your ID\"\n  2- Same image input behavior as above\n  3- Preview and proceed control\nLive Selfie Photo\n  1- Title: \"Take a live photo of yourself\"\n  2- Camera access required (disable gallery)\n  3- Require real-time photo capture (no file upload)\n  4- Show confirmation before submission\n After the 3rd step, user proceeds to a review and submit screen\n Validate that all three files are present before allowing submission\n\nFRA Compliance (Section: Annex No. 1)\n Front and back ID images = Possession Factor\n Live selfie = Presence Factor\n Selfie must be captured in real-time, not from storage\n Data must be securely handled and not cached in frontend memory after submission\n All uploaded files must be linked to the verified user and submitted via secure endpoint\n\n","createdAt":"2025-06-29T14:05:21Z","labels":[],"milestone":null,"number":34,"state":"CLOSED","title":"Issue: Implement 3-Step Document Upload Flow (Front, Back, Live Photo)","updatedAt":"2025-06-30T17:50:46Z","url":"https://github.com/hossaryp/beta/issues/34"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nAllow users to securely reset their 6-digit PIN through the app interface by verifying their identity using OTP (Possession Factor), in accordance with FRA‚Äôs identity authentication rules.\n\nAcceptance Criteria\n Add a ‚ÄúForgot PIN?‚Äù link to the PIN entry modal or lock screen\n On tap, redirect user to ForgotPinScreen\n Forgot PIN flow must include the following steps:\n      1-Display user‚Äôs masked phone number\n      2-Tap ‚ÄúSend OTP‚Äù ‚Üí Call existing OTP API\n      3-Show OTP input field\n      4-lidate OTP ‚Üí Show new PIN form\n      5-Enter + confirm 6-digit PIN (masked)\n      6-Submit ‚Üí Call POST /api/pin/reset\n      7-On success ‚Üí Redirect to unlocked state (Explore or Home)\n PIN fields must:\n    1-Accept only 6 numeric digits\n    2-Mask input (‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢)\n    3-Show error if PINs don‚Äôt match\n Show error states for:\n   1-OTP invalid or expired\n   2-PIN format incorrect\n   3-General failure from backend\n Include loading states, success feedback, and clear UI steps\n\nFRA Compliance (Frontend Role)\n OTP = Possession Factor, mandatory before allowing PIN reset\n PIN = Knowledge Factor, must follow 6-digit masked UI standard\n User identity must already be established (logged-in session with verified phone)\n No PIN value may be stored in memory, localStorage, or passed unmasked in requests\n\nUI Components Involved\n EnterPinModal.tsx ‚Üí Add ‚ÄúForgot PIN?‚Äù\n ForgotPinScreen.tsx ‚Üí OTP input and PIN reset UI\n PinForm.tsx ‚Üí Reusable masked 6-digit PIN input\n OtpInput.tsx ‚Üí Reuse existing OTP input with 6-digit support\n Success message ‚Üí ‚ÄúYour PIN has been reset successfully‚Äù","createdAt":"2025-06-29T13:41:30Z","labels":[],"milestone":null,"number":33,"state":"CLOSED","title":"Feature: Implement ‚ÄúForgot PIN‚Äù Flow in UI","updatedAt":"2025-07-01T09:17:23Z","url":"https://github.com/hossaryp/beta/issues/33"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":" **Objective**\nImplement a secure flow to allow users to reset their 6-digit PIN using verified OTP authentication, in compliance with FRA‚Äôs digital identity and multi-factor verification rules.\n\n**Acceptance Criteria**\n Create POST /api/pin/reset endpoint\n Request must include:\n      1-Verified user ID (or phone number)\n      2-Valid OTP (previously issued and matched via possession factor)\n      3-New 6-digit PIN\n OTP must be checked against recent issuance (FRA requires Possession Factor for resets)\n New PIN must be validated as numeric and exactly 6 digits\n Hash new PIN securely using bcrypt or argon2\n Overwrite old PIN hash in backend storage\n Return 200 OK on success\n Return appropriate error if:\n        1- OTP is invalid or expired\n        2-PIN format is incorrect\n        3-User does not exist or is not eligible to reset\n\n**FRA Compliance Requirements Applied**\n Reset flow uses OTP as a Possession Factor\n New PIN becomes part of the user‚Äôs active multi-factor identity\n Reset event must be securely logged (see below)\n This action is part of digital identity lifecycle, governed by FRA Section Two and Annex 1\n\n **Security Notes**\n Never log raw or hashed PIN or OTP\n Hash must be generated server-side only\n Reset attempts must be rate-limited to prevent abuse\n Ensure session is not reused across devices after PIN reset\n\n**Identity Ledger Logging (Recommended)**\nLog a ‚ÄúPIN_RESET‚Äù event to backend‚Äôs digital identity ledger:\n  1- User ID\n  2-Timestamp\n  3-OTP verified status\n  4-Reset success/failure status","createdAt":"2025-06-29T13:35:06Z","labels":[],"milestone":null,"number":32,"state":"CLOSED","title":"Feature: Backend Endpoint for ‚ÄúForgot PIN‚Äù Flow","updatedAt":"2025-07-01T09:17:22Z","url":"https://github.com/hossaryp/beta/issues/32"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"Objective\nCreate a secure backend endpoint to receive and store a user‚Äôs 6-digit PIN after legal agreement acceptance, in compliance with FRA‚Äôs requirements for digital identity authentication.\n\nAcceptance Criteria\nCreate POST /api/pin/set endpoint (accessible only after verified legal consent)\nRequest must include:\n      1- Verified user ID (or verified phone linked to identity)\n      2-A 6-digit numeric PIN (Knowledge Factor)\n Validate that PIN is numeric and exactly 6 digits\n Hash the PIN securely using a strong algorithm (e.g. bcrypt or argon2)\n Store the hash in the backend database, associated with the user‚Äôs digital identity record\n Return 200 OK on success\n Return appropriate error on failure:\n      1- Invalid format\n      2-PIN already set (unless part of reset flow)\n\nFRA Compliance Requirements Applied\n PIN is treated as a Knowledge Factor Group element under FRA Section Two\n It must be used with a Possession (e.g. OTP) or Presence (e.g. device) factor for identity verification and gated actions\n PIN setup must occur within a controlled digital identity flow (after legal consent but before full KYC)\n All PIN-related actions must be traceable as part of the Digital Identity Ledger or backend logs\n\n Security Notes (FRA-Aligned)\n Never log raw or hashed PIN at any point\n All PIN hashing must be performed on the server\n Do not store the PIN in frontend memory or browser storage\n Avoid insecure hashing (MD5, SHA1) ‚Äî use only approved methods\n Ensure data is retained in a secure digital record, as required under Annex 1 of the FRA decree\n\nüßæ Audit Trail Enhancement\nLog PIN setup event in your backend‚Äôs Digital Identity Ledger (not the PIN itself)\nTimestamp\nUser ID\nDevice metadata (if available)","createdAt":"2025-06-29T13:17:13Z","labels":[],"milestone":null,"number":31,"state":"CLOSED","title":"Feature: Backend Endpoint to Store 6-Digit PIN","updatedAt":"2025-06-30T17:48:11Z","url":"https://github.com/hossaryp/beta/issues/31"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"As a user, I want to:\nCreate and confirm a 6-digit PIN right after accepting legal terms, so I can secure my session and protect access to sensitive actions in the app.\n\nAcceptance Criteria\nAfter legal terms are accepted, the user is directed to the Set PIN screen\nThe screen displays:\nTitle: ‚ÄúCreate your 6-digit PIN‚Äù\nSubtext: ‚ÄúThis PIN will protect your wallet and investments‚Äù\n \nUser must:\nEnter a 6-digit numeric PIN (masked input)\nConfirm the same 6-digit PIN\nTap ‚ÄúConfirm‚Äù to continue\n PIN mismatch triggers error: \"PINs do not match\"\n\n On confirmation:\nPIN is hashed using bcrypt or argon2\nHash is sent to POST /api/pin/set\nServer stores it securely, associated with user ID / phone\nUser is then forwarded to KYC flow or Home Tab ","createdAt":"2025-06-29T13:12:39Z","labels":[],"milestone":null,"number":30,"state":"CLOSED","title":"Feature:  Set 6-Digit PIN After Legal Consent","updatedAt":"2025-06-30T16:39:20Z","url":"https://github.com/hossaryp/beta/issues/30"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"roblem Summary\nIn Pend Beta, users do not fund a balance in advance. Instead, they initiate a payment directly when investing in an asset. This flow must be simple, clear, and legally compliant ‚Äî ensuring user agreement, consent, and structured payment instruction before proceeding.\n\nüéØ Objective\nDesign and implement a payment initiation flow that begins only after the user selects an asset, agrees to investment terms, and confirms consent. The user then selects a payment method and follows instructions to complete the transaction.\n\nüîç Scope of Work\n‚úÖ Entry Point\nTriggered from Invest Now CTA on any asset\n\nInvestment form appears only after:\n\nUser views asset details\n\nUser accepts investment terms\n\nConsent signature is recorded via ConsentManager\n\n‚úÖ Payment Method Selection Screen\nUI shows available methods:\n\nBank Transfer\n\nCredit/Debit Card\n\nLayout:\n\nTitle: \"Select Payment Method\"\n\nEach method as a styled card with icon + short description\n\nOn selection, proceed to instructions\n\n‚úÖ Payment Instruction Screen\nBased on chosen method:\n\nBank Transfer:\n\nShow: Bank Name, Account Number/IBAN, Reference Code\n\nInstructional text: ‚ÄúPlease transfer the exact amount and include your reference code.‚Äù\n\nCredit Card:\n\nShow: mock form or placeholder (no actual gateway)\n\nButton: \"Confirm Payment\" ‚Üí mock confirmation\n\nCTA Button: \"Confirm Payment\"\n\nOn click:\n\nStore paymentMethod in transaction metadata\n\nSet status to pending\n\nEmit ConsentVerified on-chain\n\n‚úÖ Metadata Logging & Status\nStore in backend:\n\nUser identity hash\n\nPayment method selected\n\nAsset ID\n\nConsent signature hash\n\nInitial status: pending\n\nShow user:\n\nConfirmation screen: \"Payment Pending\"\n\nOptional: link to transaction activity or wallet\n\n‚úÖ Acceptance Criteria\n Payment flow starts only after terms are accepted\n\n User selects payment method: Bank or Card\n\n Clear, method-specific instructions shown\n\n Confirm button logs metadata and triggers consent signature\n\n User sees success confirmation with status pending\n\n Fully styled to match Pend guidelines (Poppins, orange accents, white background)\n\n No wallet top-up or balance system used\n\n‚è≥ Priority\nHIGH ‚Äî Required for compliant and user-friendly investment execution\n","createdAt":"2025-06-24T16:07:06Z","labels":[],"milestone":null,"number":29,"state":"CLOSED","title":"Feature Implement Payment Process Flow on Investment action","updatedAt":"2025-06-25T07:51:11Z","url":"https://github.com/hossaryp/beta/issues/29"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\n\nThe Pend Beta app currently lacks a consistent bottom navigation bar for screen switching. Without it, users cannot easily move between core areas like Explore, My Investment, and Profile. A sticky mobile nav bar is essential for usability, discoverability, and a polished app experience.\n\nüéØ Objective\n\nCreate a **3-tab mobile navigation bar** fixed at the bottom of the screen, enabling smooth navigation between:\n\n1. Explore\n2. My Investment\n3. Profile\n\nIt should follow Pend‚Äôs branding (icon-first, minimal labels, orange highlight for active tab).\n\n\n\nüîç Scope of Work\n\n‚úÖ Layout & Styling\n\n* **Container:**\n\n  * Fixed to bottom (`fixed bottom-0 left-0 right-0`)\n  * Background: white\n  * Shadow: `shadow-md`\n  * Padding: `py-2 px-6`\n  * Flex layout: `flex justify-between items-center`\n\n* **Tab Item:**\n\n  * Icon (SVG or from lucide-react)\n  * Label below icon (e.g., `Explore`, `Profile`)\n  * Font: `Poppins`, `text-xs`, `text-center`\n  * Layout: vertical (`flex flex-col items-center gap-1`)\n\n* **Active Tab Styling:**\n\n  * Icon and label use brand orange `#FF8A34`\n  * Inactive tabs use muted gray `#A3A3A3` or `text-gray-400`\n\n* **Icon Size:**\n\n  * About `24px` width, using viewBox or class sizing\n\n---\n\n‚úÖ Tabs & Routing\n\n| Tab           | Icon                              | Route        |\n| ------------- | --------------------------------- | ------------ |\n| Explore       | Leaf (üü¢ `lucide:leaf`)           | `/explore`   |\n| My Investment | Pie Chart (üü† `lucide:pie-chart`) | `/portfolio` |\n| Profile       | User (üü† `lucide:user`)           | `/profile`   |\n\n* Use `React Router` for navigation\n* Active tab detected via `useLocation()`\n* Use `onClick` to navigate on tab press\n\n\n‚úÖ Acceptance Criteria\n\n* [ ] Bar is fixed at bottom and visible on all main screens\n* [ ] Tabs include icon + label, with orange styling for active tab\n* [ ] Icons match those shown in uploaded screenshot\n* [ ] Responsive on all mobile screen sizes (min 360px)\n* [ ] Tab click updates route via React Router without reload\n* [ ] Smooth transition between pages\n* [ ] No top border, no animations, no labels outside of icons\n\n\n‚è≥ Priority\n\n**HIGH** ‚Äî Foundational for user navigation across the app\n\n![Image](https://github.com/user-attachments/assets/c3139bb0-5014-4ab1-824a-bc95b5275996)","createdAt":"2025-06-24T16:00:39Z","labels":[],"milestone":null,"number":28,"state":"CLOSED","title":"Feature: Build Bottom Navigation Bar for Pend Beta App","updatedAt":"2025-06-25T07:52:44Z","url":"https://github.com/hossaryp/beta/issues/28"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\nCurrently, users cannot end their session within the Pend Beta app. Without a logout feature, user sessions persist indefinitely, which poses security and privacy concerns. A logout button is essential for session management, especially on shared or mobile devices.\n\nüéØ Objective\nAdd a logout button at the bottom of the Profile tab that:\n\nClears the user's session and local data\n\nSimulates logout behavior by redirecting to the login or welcome screen\n\nFollows Pend‚Äôs visual style and mobile responsiveness\n\nüîç Scope of Work\n‚úÖ UI Design\nButton Text: Logout\n\nStyle:\n\nText color: text-red-500\n\nOutline: border border-red-200\n\nBorder radius: rounded-lg\n\nFont: text-sm, font-medium\n\nSpacing: mx-4 mt-4 mb-6, py-2 px-4, full-width\n\nPlacement:\n\nBottom of the Profile tab, below all settings and support sections\n\n‚úÖ Functionality\nOn click:\n\nClear all session-related data (mocked or real)\n\nLocal storage / context / state cleanup\n\nOptionally reset navigation stack\n\nRedirect to:\n\nLogin screen (if available), or\n\nWelcome/landing screen\n\nAdd console.log(\"User logged out\") for dev feedback\n\n‚úÖ Optional Enhancement\nShow a confirmation modal:\n\nTitle: ‚ÄúAre you sure you want to logout?‚Äù\n\nButtons: Cancel / Confirm\n\nOnly if time allows\n\n‚úÖ Acceptance Criteria\n Logout button is styled and visible on all mobile screen sizes\n\n Clicking it clears session and redirects user to login/welcome\n\n Uses proper spacing, color, and font per Pend guidelines\n\n (Optional) Confirmation modal is shown before logout\n\n No bugs on repeated logout attempts or back navigation\n\n‚è≥ Priority\nHIGH ‚Äî Critical for security, especially in mobile-first applications","createdAt":"2025-06-24T15:55:47Z","labels":[],"milestone":null,"number":27,"state":"CLOSED","title":"Feature: Implement Logout Functionality in Profile Tab","updatedAt":"2025-06-25T07:52:53Z","url":"https://github.com/hossaryp/beta/issues/27"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\nThe current profile experience is fragmented ‚Äî user info and verification status are split across multiple components. This makes it harder for users to understand their identity status, what‚Äôs left to complete, and how close they are to being verified. A unified card solves this and gives a clean, guided user experience.\n\nüéØ Objective\nCreate a single combined card inside the Profile tab that displays:\n\nUser ID\n\n‚ÄúUser Since‚Äù date\n\nTotal Invested\n\nVerification status: 1/5 steps complete\n\nStep label: \"Next: Complete Profile Information\"\n\nStatus tag:\n\nIf all steps complete ‚Üí Verified (orange text + border)\n\nIf incomplete ‚Üí Not Verified (gray border, filled text)\n\nInclude a CTA button to ‚ÄúComplete Profile Now‚Äù.\n\nüîç Scope of Work\n‚úÖ UI Layout\nCard Container:\n\nbg-white, rounded-xl, shadow-sm, px-4 py-4\n\nMargin: mt-4, mb-3, w-full\n\nTop Section (Account Info):\n\nLabel: User ID ‚Üí text-xs, text-gray-500\n\nValue: PND-2024-5847 ‚Üí text-sm, text-black, font-medium\n\nLabel: User Since ‚Üí same style\n\nValue: e.g. March 2025\n\nLabel: Total Invested ‚Üí same style\n\nValue: e.g. EGP 12,600.00 (formatted with utility)\n\nDivider: optional line or spacing between sections\n\nBottom Section (Verification Progress):\n\nText:\n\nProgress: 1 / 5 steps complete\n\nStyle: text-sm, text-black\n\nNext Step Label:\n\nNext: Complete Profile Information\n\ntext-xs, text-gray-500, margin-top mt-1\n\nVerification Status Tag:\n\nIf complete:\n\nVerified\n\nStyle: border border-[#FF8A34] text-[#FF8A34] px-3 py-1 text-xs rounded-full\n\nIf not complete:\n\nNot Verified\n\nStyle: bg-gray-100 text-gray-500 px-3 py-1 text-xs rounded-full\n\nCTA Button:\n\nLabel: Complete Profile Now\n\nFull width, solid orange background\n\nStyle: bg-[#FF8A34] text-white py-2 px-4 rounded-lg mt-3 text-sm font-medium\n\n‚úÖ Data & Logic\nts\nCopy\nEdit\nconst user = {\n  userId: \"PND-2024-5847\",\n  createdAt: \"2025-03-14\",\n  totalInvested: 12600,\n  stepsCompleted: 1,\n  totalSteps: 5\n};\n\nconst isVerified = user.stepsCompleted === user.totalSteps;\n‚úÖ Acceptance Criteria\n Card appears in Profile tab after the header\n\n Displays user ID, join date, and total investment clearly\n\n Progress is shown as 1 / 5 steps complete (no % bar)\n\n If incomplete, status is Not Verified in grey\n\n If all steps completed, status is Verified in orange\n\n ‚ÄúComplete Profile Now‚Äù CTA triggers next onboarding step (mocked)\n\n Layout is fully mobile responsive, clean, and branded\n\n‚è≥ Priority\nHIGH ‚Äî Combines identity, investment, and verification clarity in one critical profile component","createdAt":"2025-06-24T15:50:17Z","labels":[],"milestone":null,"number":25,"state":"CLOSED","title":"Feature  Build Unified Account Overview & Verification Status Card in Profile Tab","updatedAt":"2025-06-25T07:54:06Z","url":"https://github.com/hossaryp/beta/issues/25"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\nThe Pend Beta app currently lacks a structured Profile tab header. Users need to immediately see their account identity and verification status. Without this, the profile experience feels disconnected and unclear, especially for users progressing through tiered verification.\n\nüéØ Objective\nCreate a top section in the Profile tab that displays:\n\nCircular profile image (placeholder for now)\n\nMasked mobile number\n\nA status tag:\n\nIf fully verified ‚Üí Verified (solid orange border)\n\nIf not ‚Üí Complete Your Profile (orange outline tag)\n\nThis component should be mobile-first and styled to Pend guidelines.\n\nüîç Scope of Work\n‚úÖ UI Layout\nContainer Style:\n\nWhite background\n\nPadding: px-4 pt-6 pb-4\n\nUse flex flex-col items-center for vertical alignment\n\nProfile Picture:\n\nCircle avatar (w-16 h-16)\n\nrounded-full, border optional\n\nPlaceholder image for now (/assets/avatar.svg)\n\nMasked Mobile Number:\n\nFormat example: +20XXXXXXXXXX\n\nFont: text-sm, font-medium, text-black\n\nPlaced just below the profile image\n\nStatus Tag (Dynamic):\n\nIf verified:\n\nText: Verified\n\nStyle: px-3 py-1 text-xs border border-[#FF8A34] text-[#FF8A34] rounded-full\n\nIf not verified:\n\nText: Complete Your Profile\n\nStyle: px-3 py-1 text-xs border border-dashed border-[#FF8A34] text-[#FF8A34] rounded-full\n\nMargin between elements: gap-2, center aligned\n\n‚úÖ State & Logic\nUse a local boolean or status string:\n\nts\nCopy\nEdit\nconst isVerified = true; // or false\nconst maskedPhone = \"+2010XXXXXXXX\";\nTag switches conditionally based on isVerified\n\n‚úÖ Acceptance Criteria\n Circular profile image appears at the top of Profile tab\n\n Mobile number is masked and displayed in readable font\n\n If verified, a solid orange Verified tag appears\n\n If incomplete, a dashed orange Complete Your Profile tag appears\n\n All elements follow spacing, sizing, and branding rules\n\n No navigation or editing needed at this step\n\n‚è≥ Priority\nHIGH ‚Äî Required for onboarding flow clarity and identity display\n","createdAt":"2025-06-24T15:48:24Z","labels":[],"milestone":null,"number":24,"state":"CLOSED","title":"Feature: Build Profile Header with Verification Tag Logic","updatedAt":"2025-06-24T16:48:52Z","url":"https://github.com/hossaryp/beta/issues/24"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\nUsers currently have no way to hide their total investment value from others around them. In public or shared environments, privacy is important. The investment summary card should include an option to toggle between showing and hiding the EGP amount and return.\n\nüéØ Objective\nBuild a summary card that displays the user's total investment value, return, and last updated timestamp. Add an eye icon that lets the user toggle visibility of their investment amounts. Default state is visible.\n\nüîç Scope of Work\n‚úÖ UI Requirements\nCard Title Row:\n\nText: \"Your Investment Value\"\n\nRight-aligned eye icon (eye / eye-off, from lucide-react or similar)\n\nIcon clickable to toggle value visibility\n\nCard Content (Visible State):\n\nValue: EGP 12,600.00\n\ntext-2xl, font-bold, text-black\n\nReturn: +EGP 1,250\n\ntext-sm, text-[#FF8A34]\n\nTimestamp: Last Updated: Jun 23, 2025\n\ntext-xs, text-gray-500\n\nCard Content (Hidden State):\n\nValue: ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\n\nReturn: hidden or ‚Äî\n\nTimestamp still visible\n\nCard Style:\n\nBackground: bg-[#FFF8F4]\n\nPadding: px-4 py-3\n\nBorder radius: rounded-xl\n\nShadow: shadow-sm\n\n‚úÖ State & Behavior\nReact useState to manage isVisible toggle\n\nDefault: true\n\nOn icon click:\n\nToggle isVisible\n\nChange icon accordingly (eye ‚Üî eye-off)\n\n‚úÖ Acceptance Criteria\n Card appears on top of the Your Investments screen\n\n Eye icon is aligned right in the title row\n\n Clicking eye toggles visibility of value and return\n\n Hidden state shows dots (‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢) for value\n\n Timestamp remains visible in both states\n\n Fully responsive and styled according to Pend guidelines\n\n No use of emojis, green/red, or off-brand colors\n\n‚è≥ Priority\nHIGH ‚Äî Required for user privacy and mobile usability in public spaces\n\n![Image](https://github.com/user-attachments/assets/f31edc7a-c04e-4925-8fe1-db7cc5f3040f)\n\n","createdAt":"2025-06-24T15:23:14Z","labels":[],"milestone":null,"number":19,"state":"CLOSED","title":"Feature  Create \"Your portfolio \" Summary Card","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/19"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üß† Problem Summary\nThe current Pend Beta mobile app lacks a consistent global header. Users need a unified top bar across all screens that displays the app identity and provides access to real-time notifications. Without this, the app lacks cohesion and users miss important updates about their activity.\n\nüéØ Objective\nBuild a global, mobile-first header component used across the Pend app. It should include:\n\nCentered branding (pend, lowercase)\n\nRight-aligned notification bell\n\nOn-click: Opens modal with recent alerts\n\nFully responsive, no layout overlap or scroll bugs\n\nüîç Scope of Work\n‚úÖ UI Requirements\nLayout:\n\nFixed or sticky to top (depending on screen design)\n\nFull-width container, white background\n\nPadding: px-4 py-2, rounded-none\n\nShadow: shadow-sm\n\nBranding:\n\nCentered: pend\n\nStyle: lowercase, font-bold, font-[Poppins], text-black, text-lg\n\nNotification Icon:\n\nRight-aligned bell icon (use lucide-react or heroicons)\n\nClick toggles dropdown/modal\n\n‚úÖ Notification Modal\nWhite rounded-xl card or floating modal\n\nMax height ~300px, scrollable if overflow\n\nShadow: shadow-lg, z-index above main content\n\nEach notification item:\n\nTitle (bold, black)\n\nTimestamp (text-xs, gray-500)\n\nOptional status tag (e.g. ‚úÖ, ‚ùó ‚Äî or simple styled dots if no emojis)\n\n\"Clear All\" button:\n\nSmall, text-[#FF8A34], aligned right\n\nOn click: clears notification list (in-memory)\n\n‚úÖ Example Notification List (initial mock state)\nts\nCopy\nEdit\n[\n  {\n    id: 1,\n    type: \"success\",\n    message: \"You successfully purchased Gold Reserve\",\n    timestamp: \"Jun 24, 10:03 AM\"\n  },\n  {\n    id: 2,\n    type: \"success\",\n    message: \"You sold Date Farm\",\n    timestamp: \"Jun 20, 2:48 PM\"\n  },\n  {\n    id: 3,\n    type: \"pending\",\n    message: \"Your investment in Olive Trees is pending\",\n    timestamp: \"Jun 18, 9:12 AM\"\n  }\n]\n‚úÖ Acceptance Criteria\n Global header appears on all screens and is consistent\n\n pend text is centered and styled according to brand\n\n Bell icon opens notification modal\n\n Modal displays 3 sample alerts, styled with spacing and timestamp\n\n \"Clear All\" button clears alerts and collapses modal if needed\n\n Uses Tailwind for layout and styling (rounded-xl, shadow-sm, etc.)\n\n No emojis used ‚Äî status conveyed by color, icon, or bold\n\n Responsive on mobile screens (min width: 360px)\n\n‚è≥ Priority\nHIGH ‚Äî Core to global layout, brand consistency, and user feedback UX","createdAt":"2025-06-24T15:18:25Z","labels":[],"milestone":null,"number":18,"state":"CLOSED","title":"Feature: Implement Global Header with Notification Modal for Pend Beta App","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/18"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nThe app currently lacks a centralized Settings section, limiting user control over their experience, preferences, and account-level actions like logout or language change.\n\nüéØ Objective\nDesign and implement a Settings screen (or section within Profile) that provides users with control over preferences, app behavior, and session management.\n\nüß© Settings Options to Include\n\nüîê Account\nView Mobile Number (read-only)\n\nChange PIN (optional, if PIN is supported)\n\nüåê Preferences\nLanguage Selector: Dropdown (e.g. Arabic, English)\n\nCurrency Display: Dropdown (EGP / USD)\n\nüîî Notifications\nToggle: Receive App Alerts (on/off)\n\nToggle: Investment Updates (on/off)\n\nüì± App Info\nDisplay App Version (static, e.g. v0.62)\n\nAbout Pend (opens About screen or modal with company/legal info)\n\nLogout button (clears session)\n\nüìç Placement\n\nAccessed from Profile screen via gear icon\n\nüé® Styling\n\nMobile-first layout\n\nPoppins font\n\nWhite background, black text (#000000)\n\nOrange toggles and CTA buttons (#FF8A34)\n\nUse cards or list rows with icons + right arrows\n\n‚úÖ Acceptance Criteria\n\nEach settings group is visible and accessible\n\nToggles and selectors work (simulate state)\n\nLogout clears session and redirects to login\n\nLanguage and currency options update state (no backend required yet)\n\n‚è≥ Priority: MEDIUM\nEnables better user control, trust, and flexibility across different regions and use cases.","createdAt":"2025-06-23T13:11:28Z","labels":[],"milestone":null,"number":17,"state":"CLOSED","title":"Feature Add Structured Settings Section","updatedAt":"2025-06-30T17:58:14Z","url":"https://github.com/hossaryp/beta/issues/17"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/61b645d0-ddb8-4aa0-9584-706d77902372)\n\nüìå Problem Summary\nThe current Profile screen shows tier status and basic account info but lacks interactive upgrade logic, tier step clarity, and contextual UX for users navigating their verification journey.\n\nüéØ Objective\nEnhance the Profile tab to clearly communicate the user‚Äôs current verification tier, show meaningful tier progress, and guide users toward the next action required for upgrade. Optional personal info should remain collapsed unless opened.\n\nüß© Scope and Required Fixes\n\nTier Progress Section\n\nüîß Issue: Current tier is shown but no clarity on completed vs. pending steps.\n\n‚úÖ Fix: Add a multi-step visual progress bar showing all 5 tiers (Mobile ‚Üí Biometric ‚Üí KYC ‚Üí Device ‚Üí Location).\n\nCurrent tier in orange (#FF8A34)\n\nCompleted steps: gray\n\nUpcoming: light gray\n\nShow tier name under each point (use short labels)\n\nNext Action CTA\n\nüîß Issue: ‚ÄúFully Verified‚Äù button is inactive even when user has completed Tier 5.\n\n‚úÖ Fix: Make the button dynamic.\n\nIf not fully verified ‚Üí label shows next tier name\n\nIf Tier 5 is reached ‚Üí change label to: Verification Complete and disable\n\nAccount Overview\n\n‚úÖ Keep fields: User ID, User Since, Total Invested\n\nConsider adding tier benefits info tooltip (optional)\n\nAdd Personal Info\n\nüîß Issue: Dropdown lacks visibility or prompt\n\n‚úÖ Fix: Add a subtitle or icon next to ‚ÄúAdd Personal Info‚Äù to prompt user (optional)\n\n‚úÖ Acceptance Criteria\n\nProfile displays user tier and investment details clearly\n\nProgress bar shows all 5 verification steps visually\n\nUpgrade button dynamically guides user to the next verification step\n\nPersonal info section is collapsed by default and optional\n\nAll labels and UI components follow Pend brand style (white background, Poppins font, orange accent)\n\n‚è≥ Priority: HIGH\nThis screen is the central reference for identity and progress ‚Äî essential for user trust, compliance clarity, and onboarding experience.","createdAt":"2025-06-23T11:49:57Z","labels":[],"milestone":null,"number":15,"state":"CLOSED","title":"Profile Screen ‚Äì Tier Display, Verification Progress, and Personal Info Access","updatedAt":"2025-06-30T17:58:13Z","url":"https://github.com/hossaryp/beta/issues/15"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nThe Hub screen currently lacks quick access to the user‚Äôs profile identity and verification tier. This makes it harder for users to know their current status and navigate to their full profile.\n\nüéØ Objective\nAdd a Profile Card component at the top of the Hub screen to display key user identity info (ID, username, tier) and allow quick access to the full Profile view.\n\nüß© Card Requirements\n\n1. Display Fields:\n\nUser ID (e.g., PND-2024-5847) or (e.g., User‚Äì04421)\n\nTier Badge (e.g., Tier 1) with orange styling (#FF8A34)\n\nprofile icon placeholder\n\n2. Interaction:\n\nEntire card is clickable\n\nNavigates to full Profile screen\n\n3. Styling:\n\nCard with soft shadow and rounded corners\n\nWhite background (#FFFFFF)\n\nUse Poppins font\n\nMaintain spacing consistency with rest of Hub components\n\n4. Placement:\n\nInsert above the first section in the Hub screen layout\n\n‚úÖ Acceptance Criteria\n\nProfile Card is visible at the top of the Hub\n\nShows User ID, Tier, and Username properly\n\nClicking the card takes user to Profile screen\n\nStyle fully matches Pend visual system\n\n‚è≥ Priority: HIGH\nIt‚Äôs the first interaction point for the user inside the app and sets the tone for identity-aware navigation.","createdAt":"2025-06-23T11:48:03Z","labels":[],"milestone":null,"number":14,"state":"CLOSED","title":"Feature Add Profile Card to Top of Hub Screen","updatedAt":"2025-06-30T15:50:16Z","url":"https://github.com/hossaryp/beta/issues/14"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nCurrent tier progression lacks a clear structure and does not enforce sequential identity verification. A consistent upgrade flow with proper UI and action requirements is needed to improve compliance, security, and UX.\n\nüéØ Objective\nImplement a modal-based, sequential Tier Upgrade Flow starting from mobile verification and ending with location access. Each tier should unlock only after the previous one is completed, with actions based on device capabilities.\n\nüß© Tier Structure & Required Actions\n\nTier 1 ‚Äì Mobile Verification\n\nAction: Enter mobile number + receive OTP\n\nResult: Create wallet and link identity hash\n\n‚úÖ Current tier for most users\n\nTier 2 ‚Äì Biometric Verification\n\nAction: Prompt to enable Face ID or fingerprint authentication\n\nResult: Bind biometric trust layer to user account\n\nPurpose: Add security for device-based login and account recovery\n\nTier 3 ‚Äì KYC Verification\n\nAction: Upload national ID (front + back)\n\nResult: Full user KYC for regulated pools and large investments\n\nTier 4 ‚Äì Device Verification\n\nAction: Toggle to allow device identity binding (e.g. device ID or secure element)\n\nPurpose: Prevent fraud, restrict access to trusted devices\n\nTier 5 ‚Äì Location Verification\n\nAction: Toggle to allow GPS or telecom location access\n\nResult: Unlock geo-specific pools based on user location\n\nPurpose: Enforce regional regulations\n\n‚úÖ Acceptance Criteria\n\nProgress bar clearly displays current and locked tiers\n\n\"Upgrade Tier\" button opens modal with only next required step\n\nModals use device capabilities where possible (biometric, GPS, etc.)\n\nFile inputs for ID upload where needed\n\nCannot skip or jump tiers\n\nAfter each step, user tier is updated in UI and stored (simulate with state)\n\n‚è≥ Priority: HIGH\nEssential for compliant onboarding, fraud prevention, and feature access control.\n\n","createdAt":"2025-06-23T11:42:48Z","labels":[],"milestone":null,"number":13,"state":"CLOSED","title":"Feature Tier Upgrade Flow ‚Äì Mobile to Location Verification","updatedAt":"2025-06-30T15:50:04Z","url":"https://github.com/hossaryp/beta/issues/13"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nWhen a user initiates a deposit, the system currently lacks a structured way to track the full deposit lifecycle ‚Äî from initiation to approval or failure. Without proper logging and status visibility, users can't verify their deposit state or trust the minting logic.\n\nüéØ Objective\nImplement a complete deposit request system with status tracking and user-facing history, tied to backend approval logic and minting events.\n\nüß© Scope\n\nDeposit Request Handling\n\nWhen user initiates a deposit:\n\nCreate a deposit request object with:\n\namount\n\npaymentMethod (from selected method)\n\nstatus: pending\n\ntimestamp\n\nuserIdentityHash\n\nStatus Lifecycle\n\nBackend updates the status based on verification:\n\napproved: Trigger EGP stablecoin minting\n\nfailed: Do not mint, initiate refund by method rules\n\nMinting\n\nMint only happens after backend sets status = approved\n\nLog minting event with reference to deposit ID\n\nUser Interface\n\nDeposit history view shows:\n\nList of past deposit requests\n\nMethod used\n\nStatus (pending, approved, failed)\n\nDate/time\n\nExplorer Logging\n\nStatus updates and deposit metadata should be logged on-chain or via the internal explorer/API\n\n‚úÖ Acceptance Criteria\n\nDeposit requests are created on every user deposit\n\nStatus updates are tracked and reflected in the UI\n\nMinting only happens after approved status\n\nUser sees a complete deposit history with status and timestamps\n\nFailed deposits are handled gracefully\n\n‚è≥ Priority\nHIGH ‚Äì Essential for trust, fund traceability, and stablecoin issuance control","createdAt":"2025-06-22T14:00:06Z","labels":[],"milestone":null,"number":12,"state":"CLOSED","title":"Feature Deposit Request Creation and Status Tracking","updatedAt":"2025-06-22T19:03:01Z","url":"https://github.com/hossaryp/beta/issues/12"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nNew users must not proceed with onboarding or wallet creation without legally accepting Pend‚Äôs Terms and Agreement. Currently, there's no enforced pre-consent step before OTP. This poses a compliance risk and lacks a clear audit trail.\n\nüéØ Objective\nIntroduce a mandatory terms acceptance step before sending the OTP, and trigger identity + wallet creation only after successful OTP verification.\n\nüß© Scope\n\nUI/UX Update\n\nOn entering a mobile number:\n\nShow Terms and Agreement checkbox:\n\nLabel: ‚ÄúI agree to Pend‚Äôs Terms and Conditions‚Äù\n\nLink to full document (modal or external)\n\nDisable OTP submission unless checkbox is checked\n\nOTP Verification Logic\n\nAfter checkbox is accepted and OTP is successfully entered:\n\nGenerate a unique identity hash\n\nCreate a wallet linked to that identity\n\nStore:\n\nmobileNumber\n\nidentityHash\n\nwalletAddress\n\nSystem Constraints\n\nOnly one identity per mobile number\n\nIdentity hash stored on backend, not on-chain\n\n‚úÖ Acceptance Criteria\n\nUsers cannot receive OTP unless they accept terms\n\nOTP is only sent after consent\n\nWallet + identity are created only after valid OTP\n\nConsent is logged for legal tracking\n\nRepeat logins skip this step\n\n‚è≥ Priority\nHIGH ‚Äì Required for legal compliance, wallet issuance, and onboarding integrity\n\n","createdAt":"2025-06-22T13:57:33Z","labels":[],"milestone":null,"number":11,"state":"CLOSED","title":"Feature First-Time Sign-Up with Terms Consent and Wallet Creation","updatedAt":"2025-06-30T15:46:58Z","url":"https://github.com/hossaryp/beta/issues/11"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nAfter an investment is confirmed, users must receive immediate and clear confirmation. Additionally, once they‚Äôve accepted the terms and agreement checkbox, they are considered legally approved to proceed. However, the current UX lacks strong visibility into what happens next and where to see the updated investment.\n\nüéØ Objective\nRedirect users to the Wallet tab after a successful investment, where they can view their contribution. Ensure the system logs the transaction and reflects it clearly in the transaction history.\n\nüß© Scope\n\nRedirect & Confirmation\n\nAfter successful investment:\n\nShow a visible success message (toast or full-screen banner)\n\nAutomatically redirect to /wallet\n\nLogging & History\n\nAdd a new entry to the transaction history\n\nInclude:\n\nPool name\n\nAmount invested\n\nCurrency\n\nTimestamp\n\nStatus should default to \"Invested\"\n\nLegal Acknowledgment\n\nEnsure that once the user has checked the agreement box during investment, the platform recognizes them as legally approved\n\n‚úÖ Acceptance Criteria\n\nInvestment success triggers redirect to Wallet\n\nWallet displays updated balance or holdings\n\nSuccess feedback is clear and instant\n\nTransaction is listed in history with accurate metadata\n\nNo further agreement prompts after consent is recorded\n\n‚è≥ Priority\nMEDIUM ‚Äì critical for clarity, retention, and legal audit trail\n\n","createdAt":"2025-06-22T13:24:55Z","labels":[],"milestone":null,"number":9,"state":"CLOSED","title":"Feature Post-Investment Handling","updatedAt":"2025-06-24T10:43:35Z","url":"https://github.com/hossaryp/beta/issues/9"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nCurrently, users can attempt to invest without confirming whether their wallet balance is sufficient, which may lead to confusion and failed transactions.\n\nüéØ Objective\nPrevent investment attempts unless user has enough funds in wallet.\n\nüß© Scope\n\nUI Logic\n\nOn amount input, compare with user balance\n\nIf balance is insufficient:\n\nShow message like ‚ÄúInsufficient Balance‚Äù\n\nDisable or block investment submission\n\n‚úÖ Acceptance Criteria\n\nReal-time validation before clicking ‚ÄúInvest‚Äù\n\nError message for insufficient balance\n\nNo transaction sent if balance < amount\n\n‚è≥ Priority\nHIGH ‚Äì essential for user experience and functional integrity","createdAt":"2025-06-22T13:06:11Z","labels":[],"milestone":null,"number":8,"state":"CLOSED","title":"Feature Balance Validation Before Investing","updatedAt":"2025-06-22T19:01:56Z","url":"https://github.com/hossaryp/beta/issues/8"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"üìå Problem Summary\nCurrently, users browsing investment pools don‚Äôt see identity tier requirements clearly, and can attempt to invest in pools they‚Äôre not eligible for. This causes friction, failed flows, and poor onboarding.\n\nüéØ Objective\nShow a clear visual tag for each pool‚Äôs identity tier (e.g. ‚ÄúOTP Only‚Äù, ‚ÄúTier 1 Required‚Äù), and enforce access control based on the user‚Äôs current tier. If the user is not eligible, prompt them to upgrade or explore other pools.\n\nüß© Scope\n\nUI/UX Update\n\nDisplay identity tier tags on pool cards:\n\n‚ÄúOTP Only‚Äù\n\n‚ÄúTier 1 Required‚Äù\n\n‚ÄúTier 2 Required‚Äù\n\nStyle tags with neutral design to match brand guidelines\n\nEligibility Enforcement\n\nWhen a user clicks ‚ÄúInvest‚Äù on a restricted pool:\n\nIf their tier is insufficient:\n\nShow message: ‚ÄúYour current tier does not allow investment in this pool‚Äù\n\nCTA options:\n\n‚ÄúUpgrade Your Tier‚Äù (if available)\n\n‚ÄúExplore More Opportunities‚Äù (link to Explore tab)\n\nBackend & Metadata\n\nAdd minTierRequired field to pool metadata (if not already present)\n\nCompare user tier (from session/auth) with pool / assets requirement\n\n‚úÖ Acceptance Criteria\n\nIdentity tier tags appear on every pool card (Pools + Explore tabs)\n\nUsers with insufficient tier:\n\nCannot proceed with investment\n\nAre shown prompt with upgrade or redirect options\n\nUsers with valid tier:\n\nProceed as normal\n\nSystem enforces logic across all investment entry points\n\n‚è≥ Priority\nHIGH ‚Äì critical for user guidance, legal compliance, and gated asset access","createdAt":"2025-06-22T13:03:51Z","labels":[],"milestone":null,"number":7,"state":"CLOSED","title":"Feature Pool Listing with Identity Tier Labels and Access Control","updatedAt":"2025-06-22T19:00:49Z","url":"https://github.com/hossaryp/beta/issues/7"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"üìå Problem Summary\nCurrently, when a user clicks \"Deposit EGP\", the flow proceeds without allowing the user to choose a payment method. This limits flexibility, causes confusion, and doesn‚Äôt reflect backend integrations (Coinbase, Binance, Bank Transfer, etc.).\n\nüéØ Objective\nIntroduce a payment options screen after selecting \"Deposit EGP\", allowing the user to choose between available funding methods.\n\nüß© Scope\n1. Payment Method Selection UI\nAfter user clicks \"Deposit EGP\":\n\nShow a modal or full-screen with the following options:\n\nüè¶ Bank Transfer\n\nüçè Apple Pay\n\nü§ñ Google Pay\n\nüåê Coinbase\n\nüü° Binance Pay\n\n(future) üí≥ Card Payment\n\nmobile walleyt (if possible) \n\nEach option should be a selectable card/button with logo and description\n\n2. Option-Specific Handling\nClicking on a payment method should:\n\nTrigger the appropriate backend flow (e.g., generate transfer reference, redirect to Coinbase, etc.)\n\nStore selected method in transaction metadata\n\nwhen payment is confiremed proceed to back end minting flow\n\n3. Metadata Logging\nInclude paymentMethod in deposit logs and explorer:\n\nj\n‚úÖ Acceptance Criteria\n Payment method selection screen shown after \"Deposit EGP\"\n\n User cannot skip selection step\n\n Each option routes to the correct handler\n\n Transaction includes selected paymentMethod\n\n Logged on-chain and in Explorer/API\n\n‚è≥ Priority\nHIGH ‚Äì improves UX, ensures integration alignment, and prepares for fiat onboarding scale\n\n","createdAt":"2025-06-19T13:02:12Z","labels":[],"milestone":null,"number":6,"state":"CLOSED","title":"Feature: Show Payment Options When Depositing EGP","updatedAt":"2025-06-22T10:05:56Z","url":"https://github.com/hossaryp/beta/issues/6"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Problem Summary\nCurrently, when a user clicks \"Invest\" in a pool (e.g., Harvest Pool), they are immediately prompted for consent (OTP or biometric). However, there is no prior step to review or approve the legal agreement (terms of investment, SPV ownership, redemption policy, etc.).\n\n Objective\nIntroduce a pre-consent agreement approval step in the investment flow. Users must review and accept a pool-specific contract/terms before proceeding to the consent phase.\n\nüß© Scope\n1. UI/UX Update\nOn \"Invest\" click:\n\nDisplay modal or screen titled:\n‚ÄúInvestment Agreement ‚Äì Powered by Dpend for Agri Investments‚Äù\n\nInclude:\n\nSummary of the agreement (editable in CMS or markdown file)\n\nLink to full legal PDF (optional)\n\nCheckbox: ‚ÄúI agree to the terms and conditions‚Äù\n\nOnly after checkbox is selected, the \"Continue\" button activates\n\n2. Consent Triggering\nOnce user agrees to the terms:\n\nThen trigger the existing consent step (OTP, biometric)\n\nStore both:\n\nagreementAccepted: true\n\nconsentHash for the action (e.g., harvest_invest)\n\n3. Audit Logging\nLog both agreement acceptance and consent in transaction log:\n\n\n‚úÖ Acceptance Criteria\n Agreement modal shown before consent\n\n Checkbox must be ticked before continuing\n\n Consent action only triggered after agreement is accepted\n\n Agreement acceptance is logged as a separate transaction event\n\n No user can bypass agreement screen before investing\n\n‚è≥ Priority\nHIGH ‚Äì critical for legal compliance, user clarity, and regulatory audit trail (especially under FRA and Reg S jurisdictions)\n\n","createdAt":"2025-06-19T12:50:29Z","labels":[],"milestone":null,"number":5,"state":"CLOSED","title":"Feature: Show Investment Agreement Before Consent for Pool Investment","updatedAt":"2025-06-22T09:49:37Z","url":"https://github.com/hossaryp/beta/issues/5"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"Problem Summary\nIn the Wallets tab of the Pend Explorer, wallet balances are not showing correctly. Additionally, clicking on any wallet does not display the transaction history for that specific wallet.\n\nScope of the Bug\n\n- Wallet list view does not show:\n- Token balances (e.g., pEGP, HVT)\n- Phone metadata (if available)\n- Last activity or transaction count\n\nWallet detail view (when clicked) fails to:\n- Load associated transaction history\n- Show basic wallet metadata\n- Provide links to related actions (deposits, redemptions, consents)\n\nüîç Expected Behavior\n\n- Wallet tab should list:\n- wallet address\n- pEGP balance\n- HVT balance\n- last active timestamp\n- transaction count\n\nWallet detail view should show:\n\n- Filtered list of transactions only for that wallet\n- Grouped by action (e.g., deposit, send, redeem, consent)\n- Expandable details (date, NAV, value, counterparties)\n\n\n\n\n‚úÖ Acceptance Criteria\n\n-  Wallet list loads all balances and metadata correctly\n- Clicking a wallet shows its unique transaction history\n- Consent, investment, and transfer events all mapped and visible\n- Search or filter by address returns expected result\n\nüïê Priority\nHIGH ‚Äì impacts trust, usability, and debugging; blocks investor visibility into wallet activity\n\n","createdAt":"2025-06-19T08:40:26Z","labels":[],"milestone":null,"number":4,"state":"CLOSED","title":"Bug: Wallet Balances Not Displayed and Transactions Missing on Wallet Detail View","updatedAt":"2025-06-22T09:22:42Z","url":"https://github.com/hossaryp/beta/issues/4"},{"assignees":[],"author":{"id":"U_kgDOBmVULw","is_bot":false,"login":"hossaryp","name":""},"body":"New Feature: Log and Display Consent-Based Signature Events in UI, API, and Blockchain\n\nBackground\nEvery sensitive action in Pend (e.g., wallet creation, investment, redemption) currently requires user consent via OTP or biometric. This is validated on-chain through the ConsentManager contract. However, these consents are not yet displayed as signed transactions in the blockchain explorer, wallet activity log, or API responses.\n\nObjective\nIntroduce a unified \"consent signature transaction\" for every verified user action (wallet creation, deposit, KYC, etc.), linking it to user identity metadata (e.g., masked phone, biometric, location tier). This enhances auditability, trust, and user transparency.\n\nScope\n1. Consent as a Visible Transaction Type\nEach successful consent (e.g., wallet creation, pool deposit) should:\nEmit an on-chain ConsentVerified event\nBe recorded as a consent_signature transaction type in transaction logs\n\n2. Explorer Update\nShow consent transactions in Explorer UI as a new category\n\nDisplay:\n\nType (wallet creation, investment, etc.)\n\nIdentity (hashed or masked phone)\n\nConsent tier (e.g., biometric, phone OTP, geo-verified)\n\nTimestamp\n\nExample: ‚ÄúWallet created with biometric + OTP (+20108****, Cairo, Egypt)‚Äù\n\n3. Wallet UI Enhancement\nIn TransactionList.tsx, show:\n\nConsent history (wallet creation, KYC upgrade, pool deposit consent)\n\nStyled tags: ‚úÖ consented, üîí biometric, üìç geo-tagged, üì± phone\n\n4. API Enhancement\n\n‚úÖ Acceptance Criteria\n On-chain consent logs emitted per action\n\n Consent transactions shown in Explorer and Wallet UI\n\n API reflects structured consent_signature type\n\n Consent actions are categorized and filterable by action type and user tier\n\n‚è≥ Priority\nHIGH ‚Äî critical for transparency, trust, and audit compliance (FRA, GDPR, Reg S)\n\n","createdAt":"2025-06-19T08:31:28Z","labels":[],"milestone":null,"number":3,"state":"CLOSED","title":"New Feature: Log and Display Consent-Based Signature Events in UI, API, and Blockchain","updatedAt":"2025-06-22T09:22:17Z","url":"https://github.com/hossaryp/beta/issues/3"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/aa41cbae-81c9-42ee-94c4-2d8646c0df71) ","createdAt":"2025-06-18T13:39:55Z","labels":[],"milestone":null,"number":2,"state":"CLOSED","title":"Deposit button action","updatedAt":"2025-06-19T05:51:34Z","url":"https://github.com/hossaryp/beta/issues/2"},{"assignees":[],"author":{"id":"U_kgDOC7jCOg","is_bot":false,"login":"Hegazyy12","name":""},"body":"![Image](https://github.com/user-attachments/assets/db1af120-1413-4cfb-90dc-343df0081ab7)","createdAt":"2025-06-18T13:05:36Z","labels":[],"milestone":null,"number":1,"state":"CLOSED","title":"First time investment - wallet tab","updatedAt":"2025-06-19T08:31:47Z","url":"https://github.com/hossaryp/beta/issues/1"}]
