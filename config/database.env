# üóÑÔ∏è Database Configuration - PostgreSQL Migration
# Environment variables for database connection and migration

# ============================================================================
# POSTGRESQL CONNECTION SETTINGS
# ============================================================================

# Database connection
DB_HOST=localhost
DB_PORT=5432
DB_NAME=pend_production
DB_USER=pend_user
DB_PASSWORD=your_secure_password_here

# Connection pooling
DB_MAX_CONNECTIONS=20
DB_IDLE_TIMEOUT=30000
DB_CONNECTION_TIMEOUT=2000

# ============================================================================
# MIGRATION SETTINGS
# ============================================================================

# Migration behavior
DB_AUTO_MIGRATE=false
DB_BACKUP_BEFORE_MIGRATION=true
DB_VALIDATION_ENABLED=true

# Data migration
JSON_BACKUP_PATH=./backups
MIGRATION_BATCH_SIZE=100
MIGRATION_LOG_LEVEL=info

# ============================================================================
# PERFORMANCE & MONITORING
# ============================================================================

# Query performance
DB_SLOW_QUERY_THRESHOLD=1000
DB_QUERY_LOGGING=false
DB_PERFORMANCE_MONITORING=true

# Health checks
DB_HEALTH_CHECK_INTERVAL=30000
DB_CONNECTION_RETRY_ATTEMPTS=5
DB_CONNECTION_RETRY_DELAY=2000

# ============================================================================
# BACKUP & RECOVERY
# ============================================================================

# Automated backups
DB_BACKUP_ENABLED=true
DB_BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
DB_BACKUP_RETENTION_DAYS=30
DB_BACKUP_DIRECTORY=./backups/database

# Point-in-time recovery
DB_WAL_ARCHIVING=true
DB_RECOVERY_TARGET_TIME=""

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# SSL/TLS
DB_SSL=false
DB_SSL_REJECT_UNAUTHORIZED=true
DB_SSL_CA_PATH=""
DB_SSL_CERT_PATH=""
DB_SSL_KEY_PATH=""

# Access control
DB_READONLY_USER=pend_readonly
DB_READONLY_PASSWORD=readonly_password_here
DB_ADMIN_USER=postgres
DB_ADMIN_PASSWORD=admin_password_here

# ============================================================================
# DEVELOPMENT/TESTING SETTINGS
# ============================================================================

# Development database (for testing migrations)
DEV_DB_HOST=localhost
DEV_DB_PORT=5433
DEV_DB_NAME=pend_development
DEV_DB_USER=pend_dev
DEV_DB_PASSWORD=dev_password_here

# Test database
TEST_DB_HOST=localhost
TEST_DB_PORT=5434
TEST_DB_NAME=pend_test
TEST_DB_USER=pend_test
TEST_DB_PASSWORD=test_password_here

# ============================================================================
# REDIS CACHE SETTINGS (for future implementation)
# ============================================================================

REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_DB=0
REDIS_TTL=3600

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================

# Winston logging
LOG_LEVEL=info
LOG_FILE_PATH=./logs/database.log
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5
LOG_DATE_PATTERN=YYYY-MM-DD

# Database query logging
DB_LOG_QUERIES=false
DB_LOG_SLOW_QUERIES=true
DB_LOG_ERRORS=true
DB_LOG_CONNECTIONS=true

# ============================================================================
# NOTES FOR SETUP
# ============================================================================

# 1. Create PostgreSQL database and user:
#    CREATE DATABASE pend_production;
#    CREATE USER pend_user WITH PASSWORD 'your_secure_password_here';
#    GRANT ALL PRIVILEGES ON DATABASE pend_production TO pend_user;
#    GRANT USAGE, CREATE ON SCHEMA public TO pend_user;

# 2. Install required extensions:
#    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
#    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";

# 3. Update PostgreSQL configuration:
#    max_connections = 100
#    shared_preload_libraries = 'pg_stat_statements'
#    track_activity_query_size = 2048
#    pg_stat_statements.track = all

# 4. Security recommendations:
#    - Use strong passwords
#    - Enable SSL in production
#    - Restrict network access
#    - Regular security updates
#    - Monitor access logs 